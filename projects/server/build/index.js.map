{
  "version": 3,
  "sources": ["../../../node_modules/postgres-array/index.js", "../../../node_modules/pg-types/lib/arrayParser.js", "../../../node_modules/postgres-date/index.js", "../../../node_modules/xtend/mutable.js", "../../../node_modules/postgres-interval/index.js", "../../../node_modules/postgres-bytea/index.js", "../../../node_modules/pg-types/lib/textParsers.js", "../../../node_modules/pg-int8/index.js", "../../../node_modules/pg-types/lib/binaryParsers.js", "../../../node_modules/pg-types/lib/builtins.js", "../../../node_modules/pg-types/index.js", "../../../node_modules/pg/lib/defaults.js", "../../../node_modules/pg/lib/utils.js", "../../../node_modules/pg/lib/sasl.js", "../../../node_modules/split2/index.js", "../../../node_modules/pgpass/lib/helper.js", "../../../node_modules/pgpass/lib/index.js", "../../../node_modules/pg/lib/type-overrides.js", "../../../node_modules/pg-connection-string/index.js", "../../../node_modules/pg/lib/connection-parameters.js", "../../../node_modules/pg/lib/result.js", "../../../node_modules/pg/lib/query.js", "../../../node_modules/pg-protocol/src/messages.ts", "../../../node_modules/pg-protocol/src/buffer-writer.ts", "../../../node_modules/pg-protocol/src/serializer.ts", "../../../node_modules/pg-protocol/src/buffer-reader.ts", "../../../node_modules/pg-protocol/src/parser.ts", "../../../node_modules/pg-protocol/src/index.ts", "../../../node_modules/pg/lib/connection.js", "../../../node_modules/pg/lib/client.js", "../../../node_modules/pg-pool/index.js", "../../../node_modules/file-uri-to-path/index.js", "../../../node_modules/bindings/bindings.js", "../../../node_modules/libpq/index.js", "../../../node_modules/pg-native/node_modules/postgres-array/index.js", "../../../node_modules/pg-native/node_modules/pg-types/lib/arrayParser.js", "../../../node_modules/pg-native/node_modules/pg-types/lib/textParsers.js", "../../../node_modules/pg-native/node_modules/pg-types/lib/binaryParsers.js", "../../../node_modules/pg-native/node_modules/pg-types/index.js", "../../../node_modules/pg-native/lib/build-result.js", "../../../node_modules/pg-native/lib/copy-stream.js", "../../../node_modules/pg-native/index.js", "../../../node_modules/pg/lib/native/query.js", "../../../node_modules/pg/lib/native/client.js", "../../../node_modules/pg/lib/native/index.js", "../../../node_modules/pg/lib/index.js", "../src/http/index.ts", "../src/lib/http.ts", "../src/lib/android.ts", "../src/http/api.ts", "../src/lib/xray_db.ts", "../src/config.ts", "../src/index.ts"],
  "sourcesContent": ["'use strict'\n\nexports.parse = function (source, transform) {\n  return new ArrayParser(source, transform).parse()\n}\n\nclass ArrayParser {\n  constructor (source, transform) {\n    this.source = source\n    this.transform = transform || identity\n    this.position = 0\n    this.entries = []\n    this.recorded = []\n    this.dimension = 0\n  }\n\n  isEof () {\n    return this.position >= this.source.length\n  }\n\n  nextCharacter () {\n    var character = this.source[this.position++]\n    if (character === '\\\\') {\n      return {\n        value: this.source[this.position++],\n        escaped: true\n      }\n    }\n    return {\n      value: character,\n      escaped: false\n    }\n  }\n\n  record (character) {\n    this.recorded.push(character)\n  }\n\n  newEntry (includeEmpty) {\n    var entry\n    if (this.recorded.length > 0 || includeEmpty) {\n      entry = this.recorded.join('')\n      if (entry === 'NULL' && !includeEmpty) {\n        entry = null\n      }\n      if (entry !== null) entry = this.transform(entry)\n      this.entries.push(entry)\n      this.recorded = []\n    }\n  }\n\n  consumeDimensions () {\n    if (this.source[0] === '[') {\n      while (!this.isEof()) {\n        var char = this.nextCharacter()\n        if (char.value === '=') break\n      }\n    }\n  }\n\n  parse (nested) {\n    var character, parser, quote\n    this.consumeDimensions()\n    while (!this.isEof()) {\n      character = this.nextCharacter()\n      if (character.value === '{' && !quote) {\n        this.dimension++\n        if (this.dimension > 1) {\n          parser = new ArrayParser(this.source.substr(this.position - 1), this.transform)\n          this.entries.push(parser.parse(true))\n          this.position += parser.position - 2\n        }\n      } else if (character.value === '}' && !quote) {\n        this.dimension--\n        if (!this.dimension) {\n          this.newEntry()\n          if (nested) return this.entries\n        }\n      } else if (character.value === '\"' && !character.escaped) {\n        if (quote) this.newEntry(true)\n        quote = !quote\n      } else if (character.value === ',' && !quote) {\n        this.newEntry()\n      } else {\n        this.record(character.value)\n      }\n    }\n    if (this.dimension !== 0) {\n      throw new Error('array dimension not balanced')\n    }\n    return this.entries\n  }\n}\n\nfunction identity (value) {\n  return value\n}\n", "var array = require('postgres-array');\n\nmodule.exports = {\n  create: function (source, transform) {\n    return {\n      parse: function() {\n        return array.parse(source, transform);\n      }\n    };\n  }\n};\n", "'use strict'\n\nvar DATE_TIME = /(\\d{1,})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,})?.*?( BC)?$/\nvar DATE = /^(\\d{1,})-(\\d{2})-(\\d{2})( BC)?$/\nvar TIME_ZONE = /([Z+-])(\\d{2})?:?(\\d{2})?:?(\\d{2})?/\nvar INFINITY = /^-?infinity$/\n\nmodule.exports = function parseDate (isoDate) {\n  if (INFINITY.test(isoDate)) {\n    // Capitalize to Infinity before passing to Number\n    return Number(isoDate.replace('i', 'I'))\n  }\n  var matches = DATE_TIME.exec(isoDate)\n\n  if (!matches) {\n    // Force YYYY-MM-DD dates to be parsed as local time\n    return getDate(isoDate) || null\n  }\n\n  var isBC = !!matches[8]\n  var year = parseInt(matches[1], 10)\n  if (isBC) {\n    year = bcYearToNegativeYear(year)\n  }\n\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  var hour = parseInt(matches[4], 10)\n  var minute = parseInt(matches[5], 10)\n  var second = parseInt(matches[6], 10)\n\n  var ms = matches[7]\n  ms = ms ? 1000 * parseFloat(ms) : 0\n\n  var date\n  var offset = timeZoneOffset(isoDate)\n  if (offset != null) {\n    date = new Date(Date.UTC(year, month, day, hour, minute, second, ms))\n\n    // Account for years from 0 to 99 being interpreted as 1900-1999\n    // by Date.UTC / the multi-argument form of the Date constructor\n    if (is0To99(year)) {\n      date.setUTCFullYear(year)\n    }\n\n    if (offset !== 0) {\n      date.setTime(date.getTime() - offset)\n    }\n  } else {\n    date = new Date(year, month, day, hour, minute, second, ms)\n\n    if (is0To99(year)) {\n      date.setFullYear(year)\n    }\n  }\n\n  return date\n}\n\nfunction getDate (isoDate) {\n  var matches = DATE.exec(isoDate)\n  if (!matches) {\n    return\n  }\n\n  var year = parseInt(matches[1], 10)\n  var isBC = !!matches[4]\n  if (isBC) {\n    year = bcYearToNegativeYear(year)\n  }\n\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  // YYYY-MM-DD will be parsed as local time\n  var date = new Date(year, month, day)\n\n  if (is0To99(year)) {\n    date.setFullYear(year)\n  }\n\n  return date\n}\n\n// match timezones:\n// Z (UTC)\n// -05\n// +06:30\nfunction timeZoneOffset (isoDate) {\n  if (isoDate.endsWith('+00')) {\n    return 0\n  }\n\n  var zone = TIME_ZONE.exec(isoDate.split(' ')[1])\n  if (!zone) return\n  var type = zone[1]\n\n  if (type === 'Z') {\n    return 0\n  }\n  var sign = type === '-' ? -1 : 1\n  var offset = parseInt(zone[2], 10) * 3600 +\n    parseInt(zone[3] || 0, 10) * 60 +\n    parseInt(zone[4] || 0, 10)\n\n  return offset * sign * 1000\n}\n\nfunction bcYearToNegativeYear (year) {\n  // Account for numerical difference between representations of BC years\n  // See: https://github.com/bendrucker/postgres-date/issues/5\n  return -(year - 1)\n}\n\nfunction is0To99 (num) {\n  return num >= 0 && num < 100\n}\n", "module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n", "'use strict'\n\nvar extend = require('xtend/mutable')\n\nmodule.exports = PostgresInterval\n\nfunction PostgresInterval (raw) {\n  if (!(this instanceof PostgresInterval)) {\n    return new PostgresInterval(raw)\n  }\n  extend(this, parse(raw))\n}\nvar properties = ['seconds', 'minutes', 'hours', 'days', 'months', 'years']\nPostgresInterval.prototype.toPostgres = function () {\n  var filtered = properties.filter(this.hasOwnProperty, this)\n\n  // In addition to `properties`, we need to account for fractions of seconds.\n  if (this.milliseconds && filtered.indexOf('seconds') < 0) {\n    filtered.push('seconds')\n  }\n\n  if (filtered.length === 0) return '0'\n  return filtered\n    .map(function (property) {\n      var value = this[property] || 0\n\n      // Account for fractional part of seconds,\n      // remove trailing zeroes.\n      if (property === 'seconds' && this.milliseconds) {\n        value = (value + this.milliseconds / 1000).toFixed(6).replace(/\\.?0+$/, '')\n      }\n\n      return value + ' ' + property\n    }, this)\n    .join(' ')\n}\n\nvar propertiesISOEquivalent = {\n  years: 'Y',\n  months: 'M',\n  days: 'D',\n  hours: 'H',\n  minutes: 'M',\n  seconds: 'S'\n}\nvar dateProperties = ['years', 'months', 'days']\nvar timeProperties = ['hours', 'minutes', 'seconds']\n// according to ISO 8601\nPostgresInterval.prototype.toISOString = PostgresInterval.prototype.toISO = function () {\n  var datePart = dateProperties\n    .map(buildProperty, this)\n    .join('')\n\n  var timePart = timeProperties\n    .map(buildProperty, this)\n    .join('')\n\n  return 'P' + datePart + 'T' + timePart\n\n  function buildProperty (property) {\n    var value = this[property] || 0\n\n    // Account for fractional part of seconds,\n    // remove trailing zeroes.\n    if (property === 'seconds' && this.milliseconds) {\n      value = (value + this.milliseconds / 1000).toFixed(6).replace(/0+$/, '')\n    }\n\n    return value + propertiesISOEquivalent[property]\n  }\n}\n\nvar NUMBER = '([+-]?\\\\d+)'\nvar YEAR = NUMBER + '\\\\s+years?'\nvar MONTH = NUMBER + '\\\\s+mons?'\nvar DAY = NUMBER + '\\\\s+days?'\nvar TIME = '([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d)\\\\.?(\\\\d{1,6})?'\nvar INTERVAL = new RegExp([YEAR, MONTH, DAY, TIME].map(function (regexString) {\n  return '(' + regexString + ')?'\n})\n  .join('\\\\s*'))\n\n// Positions of values in regex match\nvar positions = {\n  years: 2,\n  months: 4,\n  days: 6,\n  hours: 9,\n  minutes: 10,\n  seconds: 11,\n  milliseconds: 12\n}\n// We can use negative time\nvar negatives = ['hours', 'minutes', 'seconds', 'milliseconds']\n\nfunction parseMilliseconds (fraction) {\n  // add omitted zeroes\n  var microseconds = fraction + '000000'.slice(fraction.length)\n  return parseInt(microseconds, 10) / 1000\n}\n\nfunction parse (interval) {\n  if (!interval) return {}\n  var matches = INTERVAL.exec(interval)\n  var isNegative = matches[8] === '-'\n  return Object.keys(positions)\n    .reduce(function (parsed, property) {\n      var position = positions[property]\n      var value = matches[position]\n      // no empty string\n      if (!value) return parsed\n      // milliseconds are actually microseconds (up to 6 digits)\n      // with omitted trailing zeroes.\n      value = property === 'milliseconds'\n        ? parseMilliseconds(value)\n        : parseInt(value, 10)\n      // no zeros\n      if (!value) return parsed\n      if (isNegative && ~negatives.indexOf(property)) {\n        value *= -1\n      }\n      parsed[property] = value\n      return parsed\n    }, {})\n}\n", "'use strict'\n\nmodule.exports = function parseBytea (input) {\n  if (/^\\\\x/.test(input)) {\n    // new 'hex' style response (pg >9.0)\n    return new Buffer(input.substr(2), 'hex')\n  }\n  var output = ''\n  var i = 0\n  while (i < input.length) {\n    if (input[i] !== '\\\\') {\n      output += input[i]\n      ++i\n    } else {\n      if (/[0-7]{3}/.test(input.substr(i + 1, 3))) {\n        output += String.fromCharCode(parseInt(input.substr(i + 1, 3), 8))\n        i += 4\n      } else {\n        var backslashes = 1\n        while (i + backslashes < input.length && input[i + backslashes] === '\\\\') {\n          backslashes++\n        }\n        for (var k = 0; k < Math.floor(backslashes / 2); ++k) {\n          output += '\\\\'\n        }\n        i += Math.floor(backslashes / 2) * 2\n      }\n    }\n  }\n  return new Buffer(output, 'binary')\n}\n", "var array = require('postgres-array')\nvar arrayParser = require('./arrayParser');\nvar parseDate = require('postgres-date');\nvar parseInterval = require('postgres-interval');\nvar parseByteA = require('postgres-bytea');\n\nfunction allowNull (fn) {\n  return function nullAllowed (value) {\n    if (value === null) return value\n    return fn(value)\n  }\n}\n\nfunction parseBool (value) {\n  if (value === null) return value\n  return value === 'TRUE' ||\n    value === 't' ||\n    value === 'true' ||\n    value === 'y' ||\n    value === 'yes' ||\n    value === 'on' ||\n    value === '1';\n}\n\nfunction parseBoolArray (value) {\n  if (!value) return null\n  return array.parse(value, parseBool)\n}\n\nfunction parseBaseTenInt (string) {\n  return parseInt(string, 10)\n}\n\nfunction parseIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(parseBaseTenInt))\n}\n\nfunction parseBigIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(function (entry) {\n    return parseBigInteger(entry).trim()\n  }))\n}\n\nvar parsePointArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parsePoint(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseFloatArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parseFloat(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseStringArray = function(value) {\n  if(!value) { return null; }\n\n  var p = arrayParser.create(value);\n  return p.parse();\n};\n\nvar parseDateArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseDate(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseIntervalArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseInterval(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseByteAArray = function(value) {\n  if (!value) { return null; }\n\n  return array.parse(value, allowNull(parseByteA));\n};\n\nvar parseInteger = function(value) {\n  return parseInt(value, 10);\n};\n\nvar parseBigInteger = function(value) {\n  var valStr = String(value);\n  if (/^\\d+$/.test(valStr)) { return valStr; }\n  return value;\n};\n\nvar parseJsonArray = function(value) {\n  if (!value) { return null; }\n\n  return array.parse(value, allowNull(JSON.parse));\n};\n\nvar parsePoint = function(value) {\n  if (value[0] !== '(') { return null; }\n\n  value = value.substring( 1, value.length - 1 ).split(',');\n\n  return {\n    x: parseFloat(value[0])\n  , y: parseFloat(value[1])\n  };\n};\n\nvar parseCircle = function(value) {\n  if (value[0] !== '<' && value[1] !== '(') { return null; }\n\n  var point = '(';\n  var radius = '';\n  var pointParsed = false;\n  for (var i = 2; i < value.length - 1; i++){\n    if (!pointParsed) {\n      point += value[i];\n    }\n\n    if (value[i] === ')') {\n      pointParsed = true;\n      continue;\n    } else if (!pointParsed) {\n      continue;\n    }\n\n    if (value[i] === ','){\n      continue;\n    }\n\n    radius += value[i];\n  }\n  var result = parsePoint(point);\n  result.radius = parseFloat(radius);\n\n  return result;\n};\n\nvar init = function(register) {\n  register(20, parseBigInteger); // int8\n  register(21, parseInteger); // int2\n  register(23, parseInteger); // int4\n  register(26, parseInteger); // oid\n  register(700, parseFloat); // float4/real\n  register(701, parseFloat); // float8/double\n  register(16, parseBool);\n  register(1082, parseDate); // date\n  register(1114, parseDate); // timestamp without timezone\n  register(1184, parseDate); // timestamp\n  register(600, parsePoint); // point\n  register(651, parseStringArray); // cidr[]\n  register(718, parseCircle); // circle\n  register(1000, parseBoolArray);\n  register(1001, parseByteAArray);\n  register(1005, parseIntegerArray); // _int2\n  register(1007, parseIntegerArray); // _int4\n  register(1028, parseIntegerArray); // oid[]\n  register(1016, parseBigIntegerArray); // _int8\n  register(1017, parsePointArray); // point[]\n  register(1021, parseFloatArray); // _float4\n  register(1022, parseFloatArray); // _float8\n  register(1231, parseFloatArray); // _numeric\n  register(1014, parseStringArray); //char\n  register(1015, parseStringArray); //varchar\n  register(1008, parseStringArray);\n  register(1009, parseStringArray);\n  register(1040, parseStringArray); // macaddr[]\n  register(1041, parseStringArray); // inet[]\n  register(1115, parseDateArray); // timestamp without time zone[]\n  register(1182, parseDateArray); // _date\n  register(1185, parseDateArray); // timestamp with time zone[]\n  register(1186, parseInterval);\n  register(1187, parseIntervalArray);\n  register(17, parseByteA);\n  register(114, JSON.parse.bind(JSON)); // json\n  register(3802, JSON.parse.bind(JSON)); // jsonb\n  register(199, parseJsonArray); // json[]\n  register(3807, parseJsonArray); // jsonb[]\n  register(3907, parseStringArray); // numrange[]\n  register(2951, parseStringArray); // uuid[]\n  register(791, parseStringArray); // money[]\n  register(1183, parseStringArray); // time[]\n  register(1270, parseStringArray); // timetz[]\n};\n\nmodule.exports = {\n  init: init\n};\n", "'use strict';\n\n// selected so (BASE - 1) * 0x100000000 + 0xffffffff is a safe integer\nvar BASE = 1000000;\n\nfunction readInt8(buffer) {\n\tvar high = buffer.readInt32BE(0);\n\tvar low = buffer.readUInt32BE(4);\n\tvar sign = '';\n\n\tif (high < 0) {\n\t\thigh = ~high + (low === 0);\n\t\tlow = (~low + 1) >>> 0;\n\t\tsign = '-';\n\t}\n\n\tvar result = '';\n\tvar carry;\n\tvar t;\n\tvar digits;\n\tvar pad;\n\tvar l;\n\tvar i;\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\tt = 0x100000000 * carry + low;\n\t\tdigits = '' + t % BASE;\n\n\t\treturn sign + digits + result;\n\t}\n}\n\nmodule.exports = readInt8;\n", "var parseInt64 = require('pg-int8');\n\nvar parseBits = function(data, bits, offset, invert, callback) {\n  offset = offset || 0;\n  invert = invert || false;\n  callback = callback || function(lastValue, newValue, bits) { return (lastValue * Math.pow(2, bits)) + newValue; };\n  var offsetBytes = offset >> 3;\n\n  var inv = function(value) {\n    if (invert) {\n      return ~value & 0xff;\n    }\n\n    return value;\n  };\n\n  // read first (maybe partial) byte\n  var mask = 0xff;\n  var firstBits = 8 - (offset % 8);\n  if (bits < firstBits) {\n    mask = (0xff << (8 - bits)) & 0xff;\n    firstBits = bits;\n  }\n\n  if (offset) {\n    mask = mask >> (offset % 8);\n  }\n\n  var result = 0;\n  if ((offset % 8) + bits >= 8) {\n    result = callback(0, inv(data[offsetBytes]) & mask, firstBits);\n  }\n\n  // read bytes\n  var bytes = (bits + offset) >> 3;\n  for (var i = offsetBytes + 1; i < bytes; i++) {\n    result = callback(result, inv(data[i]), 8);\n  }\n\n  // bits to read, that are not a complete byte\n  var lastBits = (bits + offset) % 8;\n  if (lastBits > 0) {\n    result = callback(result, inv(data[bytes]) >> (8 - lastBits), lastBits);\n  }\n\n  return result;\n};\n\nvar parseFloatFromBits = function(data, precisionBits, exponentBits) {\n  var bias = Math.pow(2, exponentBits - 1) - 1;\n  var sign = parseBits(data, 1);\n  var exponent = parseBits(data, exponentBits, 1);\n\n  if (exponent === 0) {\n    return 0;\n  }\n\n  // parse mantissa\n  var precisionBitsCounter = 1;\n  var parsePrecisionBits = function(lastValue, newValue, bits) {\n    if (lastValue === 0) {\n      lastValue = 1;\n    }\n\n    for (var i = 1; i <= bits; i++) {\n      precisionBitsCounter /= 2;\n      if ((newValue & (0x1 << (bits - i))) > 0) {\n        lastValue += precisionBitsCounter;\n      }\n    }\n\n    return lastValue;\n  };\n\n  var mantissa = parseBits(data, precisionBits, exponentBits + 1, false, parsePrecisionBits);\n\n  // special cases\n  if (exponent == (Math.pow(2, exponentBits + 1) - 1)) {\n    if (mantissa === 0) {\n      return (sign === 0) ? Infinity : -Infinity;\n    }\n\n    return NaN;\n  }\n\n  // normale number\n  return ((sign === 0) ? 1 : -1) * Math.pow(2, exponent - bias) * mantissa;\n};\n\nvar parseInt16 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 15, 1, true) + 1);\n  }\n\n  return parseBits(value, 15, 1);\n};\n\nvar parseInt32 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 31, 1, true) + 1);\n  }\n\n  return parseBits(value, 31, 1);\n};\n\nvar parseFloat32 = function(value) {\n  return parseFloatFromBits(value, 23, 8);\n};\n\nvar parseFloat64 = function(value) {\n  return parseFloatFromBits(value, 52, 11);\n};\n\nvar parseNumeric = function(value) {\n  var sign = parseBits(value, 16, 32);\n  if (sign == 0xc000) {\n    return NaN;\n  }\n\n  var weight = Math.pow(10000, parseBits(value, 16, 16));\n  var result = 0;\n\n  var digits = [];\n  var ndigits = parseBits(value, 16);\n  for (var i = 0; i < ndigits; i++) {\n    result += parseBits(value, 16, 64 + (16 * i)) * weight;\n    weight /= 10000;\n  }\n\n  var scale = Math.pow(10, parseBits(value, 16, 48));\n  return ((sign === 0) ? 1 : -1) * Math.round(result * scale) / scale;\n};\n\nvar parseDate = function(isUTC, value) {\n  var sign = parseBits(value, 1);\n  var rawValue = parseBits(value, 63, 1);\n\n  // discard usecs and shift from 2000 to 1970\n  var result = new Date((((sign === 0) ? 1 : -1) * rawValue / 1000) + 946684800000);\n\n  if (!isUTC) {\n    result.setTime(result.getTime() + result.getTimezoneOffset() * 60000);\n  }\n\n  // add microseconds to the date\n  result.usec = rawValue % 1000;\n  result.getMicroSeconds = function() {\n    return this.usec;\n  };\n  result.setMicroSeconds = function(value) {\n    this.usec = value;\n  };\n  result.getUTCMicroSeconds = function() {\n    return this.usec;\n  };\n\n  return result;\n};\n\nvar parseArray = function(value) {\n  var dim = parseBits(value, 32);\n\n  var flags = parseBits(value, 32, 32);\n  var elementType = parseBits(value, 32, 64);\n\n  var offset = 96;\n  var dims = [];\n  for (var i = 0; i < dim; i++) {\n    // parse dimension\n    dims[i] = parseBits(value, 32, offset);\n    offset += 32;\n\n    // ignore lower bounds\n    offset += 32;\n  }\n\n  var parseElement = function(elementType) {\n    // parse content length\n    var length = parseBits(value, 32, offset);\n    offset += 32;\n\n    // parse null values\n    if (length == 0xffffffff) {\n      return null;\n    }\n\n    var result;\n    if ((elementType == 0x17) || (elementType == 0x14)) {\n      // int/bigint\n      result = parseBits(value, length * 8, offset);\n      offset += length * 8;\n      return result;\n    }\n    else if (elementType == 0x19) {\n      // string\n      result = value.toString(this.encoding, offset >> 3, (offset += (length << 3)) >> 3);\n      return result;\n    }\n    else {\n      console.log(\"ERROR: ElementType not implemented: \" + elementType);\n    }\n  };\n\n  var parse = function(dimension, elementType) {\n    var array = [];\n    var i;\n\n    if (dimension.length > 1) {\n      var count = dimension.shift();\n      for (i = 0; i < count; i++) {\n        array[i] = parse(dimension, elementType);\n      }\n      dimension.unshift(count);\n    }\n    else {\n      for (i = 0; i < dimension[0]; i++) {\n        array[i] = parseElement(elementType);\n      }\n    }\n\n    return array;\n  };\n\n  return parse(dims, elementType);\n};\n\nvar parseText = function(value) {\n  return value.toString('utf8');\n};\n\nvar parseBool = function(value) {\n  if(value === null) return null;\n  return (parseBits(value, 8) > 0);\n};\n\nvar init = function(register) {\n  register(20, parseInt64);\n  register(21, parseInt16);\n  register(23, parseInt32);\n  register(26, parseInt32);\n  register(1700, parseNumeric);\n  register(700, parseFloat32);\n  register(701, parseFloat64);\n  register(16, parseBool);\n  register(1114, parseDate.bind(null, false));\n  register(1184, parseDate.bind(null, true));\n  register(1000, parseArray);\n  register(1007, parseArray);\n  register(1016, parseArray);\n  register(1008, parseArray);\n  register(1009, parseArray);\n  register(25, parseText);\n};\n\nmodule.exports = {\n  init: init\n};\n", "/**\n * Following query was used to generate this file:\n\n SELECT json_object_agg(UPPER(PT.typname), PT.oid::int4 ORDER BY pt.oid)\n FROM pg_type PT\n WHERE typnamespace = (SELECT pgn.oid FROM pg_namespace pgn WHERE nspname = 'pg_catalog') -- Take only builting Postgres types with stable OID (extension types are not guaranted to be stable)\n AND typtype = 'b' -- Only basic types\n AND typelem = 0 -- Ignore aliases\n AND typisdefined -- Ignore undefined types\n */\n\nmodule.exports = {\n    BOOL: 16,\n    BYTEA: 17,\n    CHAR: 18,\n    INT8: 20,\n    INT2: 21,\n    INT4: 23,\n    REGPROC: 24,\n    TEXT: 25,\n    OID: 26,\n    TID: 27,\n    XID: 28,\n    CID: 29,\n    JSON: 114,\n    XML: 142,\n    PG_NODE_TREE: 194,\n    SMGR: 210,\n    PATH: 602,\n    POLYGON: 604,\n    CIDR: 650,\n    FLOAT4: 700,\n    FLOAT8: 701,\n    ABSTIME: 702,\n    RELTIME: 703,\n    TINTERVAL: 704,\n    CIRCLE: 718,\n    MACADDR8: 774,\n    MONEY: 790,\n    MACADDR: 829,\n    INET: 869,\n    ACLITEM: 1033,\n    BPCHAR: 1042,\n    VARCHAR: 1043,\n    DATE: 1082,\n    TIME: 1083,\n    TIMESTAMP: 1114,\n    TIMESTAMPTZ: 1184,\n    INTERVAL: 1186,\n    TIMETZ: 1266,\n    BIT: 1560,\n    VARBIT: 1562,\n    NUMERIC: 1700,\n    REFCURSOR: 1790,\n    REGPROCEDURE: 2202,\n    REGOPER: 2203,\n    REGOPERATOR: 2204,\n    REGCLASS: 2205,\n    REGTYPE: 2206,\n    UUID: 2950,\n    TXID_SNAPSHOT: 2970,\n    PG_LSN: 3220,\n    PG_NDISTINCT: 3361,\n    PG_DEPENDENCIES: 3402,\n    TSVECTOR: 3614,\n    TSQUERY: 3615,\n    GTSVECTOR: 3642,\n    REGCONFIG: 3734,\n    REGDICTIONARY: 3769,\n    JSONB: 3802,\n    REGNAMESPACE: 4089,\n    REGROLE: 4096\n};\n", "var textParsers = require('./lib/textParsers');\nvar binaryParsers = require('./lib/binaryParsers');\nvar arrayParser = require('./lib/arrayParser');\nvar builtinTypes = require('./lib/builtins');\n\nexports.getTypeParser = getTypeParser;\nexports.setTypeParser = setTypeParser;\nexports.arrayParser = arrayParser;\nexports.builtins = builtinTypes;\n\nvar typeParsers = {\n  text: {},\n  binary: {}\n};\n\n//the empty parse function\nfunction noParse (val) {\n  return String(val);\n};\n\n//returns a function used to convert a specific type (specified by\n//oid) into a result javascript type\n//note: the oid can be obtained via the following sql query:\n//SELECT oid FROM pg_type WHERE typname = 'TYPE_NAME_HERE';\nfunction getTypeParser (oid, format) {\n  format = format || 'text';\n  if (!typeParsers[format]) {\n    return noParse;\n  }\n  return typeParsers[format][oid] || noParse;\n};\n\nfunction setTypeParser (oid, format, parseFn) {\n  if(typeof format == 'function') {\n    parseFn = format;\n    format = 'text';\n  }\n  typeParsers[format][oid] = parseFn;\n};\n\ntextParsers.init(function(oid, converter) {\n  typeParsers.text[oid] = converter;\n});\n\nbinaryParsers.init(function(oid, converter) {\n  typeParsers.binary[oid] = converter;\n});\n", "'use strict'\n\nmodule.exports = {\n  // database host. defaults to localhost\n  host: 'localhost',\n\n  // database user's name\n  user: process.platform === 'win32' ? process.env.USERNAME : process.env.USER,\n\n  // name of database to connect\n  database: undefined,\n\n  // database user's password\n  password: null,\n\n  // a Postgres connection string to be used instead of setting individual connection items\n  // NOTE:  Setting this value will cause it to override any other value (such as database or user) defined\n  // in the defaults object.\n  connectionString: undefined,\n\n  // database port\n  port: 5432,\n\n  // number of rows to return at a time from a prepared statement's\n  // portal. 0 will return all rows at once\n  rows: 0,\n\n  // binary result mode\n  binary: false,\n\n  // Connection pool options - see https://github.com/brianc/node-pg-pool\n\n  // number of connections to use in connection pool\n  // 0 will disable connection pooling\n  max: 10,\n\n  // max milliseconds a client can go unused before it is removed\n  // from the pool and destroyed\n  idleTimeoutMillis: 30000,\n\n  client_encoding: '',\n\n  ssl: false,\n\n  application_name: undefined,\n\n  fallback_application_name: undefined,\n\n  options: undefined,\n\n  parseInputDatesAsUTC: false,\n\n  // max milliseconds any query using this connection will execute for before timing out in error.\n  // false=unlimited\n  statement_timeout: false,\n\n  // Terminate any session with an open transaction that has been idle for longer than the specified duration in milliseconds\n  // false=unlimited\n  idle_in_transaction_session_timeout: false,\n\n  // max milliseconds to wait for query to complete (client side)\n  query_timeout: false,\n\n  connect_timeout: 0,\n\n  keepalives: 1,\n\n  keepalives_idle: 0,\n}\n\nvar pgTypes = require('pg-types')\n// save default parsers\nvar parseBigInteger = pgTypes.getTypeParser(20, 'text')\nvar parseBigIntegerArray = pgTypes.getTypeParser(1016, 'text')\n\n// parse int8 so you can get your count values as actual numbers\nmodule.exports.__defineSetter__('parseInt8', function (val) {\n  pgTypes.setTypeParser(20, 'text', val ? pgTypes.getTypeParser(23, 'text') : parseBigInteger)\n  pgTypes.setTypeParser(1016, 'text', val ? pgTypes.getTypeParser(1007, 'text') : parseBigIntegerArray)\n})\n", "'use strict'\n\nconst crypto = require('crypto')\n\nconst defaults = require('./defaults')\n\nfunction escapeElement(elementRepresentation) {\n  var escaped = elementRepresentation.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')\n\n  return '\"' + escaped + '\"'\n}\n\n// convert a JS array to a postgres array literal\n// uses comma separator so won't work for types like box that use\n// a different array separator.\nfunction arrayString(val) {\n  var result = '{'\n  for (var i = 0; i < val.length; i++) {\n    if (i > 0) {\n      result = result + ','\n    }\n    if (val[i] === null || typeof val[i] === 'undefined') {\n      result = result + 'NULL'\n    } else if (Array.isArray(val[i])) {\n      result = result + arrayString(val[i])\n    } else if (val[i] instanceof Buffer) {\n      result += '\\\\\\\\x' + val[i].toString('hex')\n    } else {\n      result += escapeElement(prepareValue(val[i]))\n    }\n  }\n  result = result + '}'\n  return result\n}\n\n// converts values from javascript types\n// to their 'raw' counterparts for use as a postgres parameter\n// note: you can override this function to provide your own conversion mechanism\n// for complex types, etc...\nvar prepareValue = function (val, seen) {\n  // null and undefined are both null for postgres\n  if (val == null) {\n    return null\n  }\n  if (val instanceof Buffer) {\n    return val\n  }\n  if (ArrayBuffer.isView(val)) {\n    var buf = Buffer.from(val.buffer, val.byteOffset, val.byteLength)\n    if (buf.length === val.byteLength) {\n      return buf\n    }\n    return buf.slice(val.byteOffset, val.byteOffset + val.byteLength) // Node.js v4 does not support those Buffer.from params\n  }\n  if (val instanceof Date) {\n    if (defaults.parseInputDatesAsUTC) {\n      return dateToStringUTC(val)\n    } else {\n      return dateToString(val)\n    }\n  }\n  if (Array.isArray(val)) {\n    return arrayString(val)\n  }\n  if (typeof val === 'object') {\n    return prepareObject(val, seen)\n  }\n  return val.toString()\n}\n\nfunction prepareObject(val, seen) {\n  if (val && typeof val.toPostgres === 'function') {\n    seen = seen || []\n    if (seen.indexOf(val) !== -1) {\n      throw new Error('circular reference detected while preparing \"' + val + '\" for query')\n    }\n    seen.push(val)\n\n    return prepareValue(val.toPostgres(prepareValue), seen)\n  }\n  return JSON.stringify(val)\n}\n\nfunction pad(number, digits) {\n  number = '' + number\n  while (number.length < digits) {\n    number = '0' + number\n  }\n  return number\n}\n\nfunction dateToString(date) {\n  var offset = -date.getTimezoneOffset()\n\n  var year = date.getFullYear()\n  var isBCYear = year < 1\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\n\n  var ret =\n    pad(year, 4) +\n    '-' +\n    pad(date.getMonth() + 1, 2) +\n    '-' +\n    pad(date.getDate(), 2) +\n    'T' +\n    pad(date.getHours(), 2) +\n    ':' +\n    pad(date.getMinutes(), 2) +\n    ':' +\n    pad(date.getSeconds(), 2) +\n    '.' +\n    pad(date.getMilliseconds(), 3)\n\n  if (offset < 0) {\n    ret += '-'\n    offset *= -1\n  } else {\n    ret += '+'\n  }\n\n  ret += pad(Math.floor(offset / 60), 2) + ':' + pad(offset % 60, 2)\n  if (isBCYear) ret += ' BC'\n  return ret\n}\n\nfunction dateToStringUTC(date) {\n  var year = date.getUTCFullYear()\n  var isBCYear = year < 1\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\n\n  var ret =\n    pad(year, 4) +\n    '-' +\n    pad(date.getUTCMonth() + 1, 2) +\n    '-' +\n    pad(date.getUTCDate(), 2) +\n    'T' +\n    pad(date.getUTCHours(), 2) +\n    ':' +\n    pad(date.getUTCMinutes(), 2) +\n    ':' +\n    pad(date.getUTCSeconds(), 2) +\n    '.' +\n    pad(date.getUTCMilliseconds(), 3)\n\n  ret += '+00:00'\n  if (isBCYear) ret += ' BC'\n  return ret\n}\n\nfunction normalizeQueryConfig(config, values, callback) {\n  // can take in strings or config objects\n  config = typeof config === 'string' ? { text: config } : config\n  if (values) {\n    if (typeof values === 'function') {\n      config.callback = values\n    } else {\n      config.values = values\n    }\n  }\n  if (callback) {\n    config.callback = callback\n  }\n  return config\n}\n\nconst md5 = function (string) {\n  return crypto.createHash('md5').update(string, 'utf-8').digest('hex')\n}\n\n// See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html\nconst postgresMd5PasswordHash = function (user, password, salt) {\n  var inner = md5(password + user)\n  var outer = md5(Buffer.concat([Buffer.from(inner), salt]))\n  return 'md5' + outer\n}\n\nmodule.exports = {\n  prepareValue: function prepareValueWrapper(value) {\n    // this ensures that extra arguments do not get passed into prepareValue\n    // by accident, eg: from calling values.map(utils.prepareValue)\n    return prepareValue(value)\n  },\n  normalizeQueryConfig,\n  postgresMd5PasswordHash,\n  md5,\n}\n", "'use strict'\nconst crypto = require('crypto')\n\nfunction startSession(mechanisms) {\n  if (mechanisms.indexOf('SCRAM-SHA-256') === -1) {\n    throw new Error('SASL: Only mechanism SCRAM-SHA-256 is currently supported')\n  }\n\n  const clientNonce = crypto.randomBytes(18).toString('base64')\n\n  return {\n    mechanism: 'SCRAM-SHA-256',\n    clientNonce,\n    response: 'n,,n=*,r=' + clientNonce,\n    message: 'SASLInitialResponse',\n  }\n}\n\nfunction continueSession(session, password, serverData) {\n  if (session.message !== 'SASLInitialResponse') {\n    throw new Error('SASL: Last message was not SASLInitialResponse')\n  }\n  if (typeof password !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string')\n  }\n  if (typeof serverData !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: serverData must be a string')\n  }\n\n  const sv = parseServerFirstMessage(serverData)\n\n  if (!sv.nonce.startsWith(session.clientNonce)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce')\n  } else if (sv.nonce.length === session.clientNonce.length) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce is too short')\n  }\n\n  var saltBytes = Buffer.from(sv.salt, 'base64')\n\n  var saltedPassword = Hi(password, saltBytes, sv.iteration)\n\n  var clientKey = hmacSha256(saltedPassword, 'Client Key')\n  var storedKey = sha256(clientKey)\n\n  var clientFirstMessageBare = 'n=*,r=' + session.clientNonce\n  var serverFirstMessage = 'r=' + sv.nonce + ',s=' + sv.salt + ',i=' + sv.iteration\n\n  var clientFinalMessageWithoutProof = 'c=biws,r=' + sv.nonce\n\n  var authMessage = clientFirstMessageBare + ',' + serverFirstMessage + ',' + clientFinalMessageWithoutProof\n\n  var clientSignature = hmacSha256(storedKey, authMessage)\n  var clientProofBytes = xorBuffers(clientKey, clientSignature)\n  var clientProof = clientProofBytes.toString('base64')\n\n  var serverKey = hmacSha256(saltedPassword, 'Server Key')\n  var serverSignatureBytes = hmacSha256(serverKey, authMessage)\n\n  session.message = 'SASLResponse'\n  session.serverSignature = serverSignatureBytes.toString('base64')\n  session.response = clientFinalMessageWithoutProof + ',p=' + clientProof\n}\n\nfunction finalizeSession(session, serverData) {\n  if (session.message !== 'SASLResponse') {\n    throw new Error('SASL: Last message was not SASLResponse')\n  }\n  if (typeof serverData !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: serverData must be a string')\n  }\n\n  const { serverSignature } = parseServerFinalMessage(serverData)\n\n  if (serverSignature !== session.serverSignature) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature does not match')\n  }\n}\n\n/**\n * printable       = %x21-2B / %x2D-7E\n *                   ;; Printable ASCII except \",\".\n *                   ;; Note that any \"printable\" is also\n *                   ;; a valid \"value\".\n */\nfunction isPrintableChars(text) {\n  if (typeof text !== 'string') {\n    throw new TypeError('SASL: text must be a string')\n  }\n  return text\n    .split('')\n    .map((_, i) => text.charCodeAt(i))\n    .every((c) => (c >= 0x21 && c <= 0x2b) || (c >= 0x2d && c <= 0x7e))\n}\n\n/**\n * base64-char     = ALPHA / DIGIT / \"/\" / \"+\"\n *\n * base64-4        = 4base64-char\n *\n * base64-3        = 3base64-char \"=\"\n *\n * base64-2        = 2base64-char \"==\"\n *\n * base64          = *base64-4 [base64-3 / base64-2]\n */\nfunction isBase64(text) {\n  return /^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.test(text)\n}\n\nfunction parseAttributePairs(text) {\n  if (typeof text !== 'string') {\n    throw new TypeError('SASL: attribute pairs text must be a string')\n  }\n\n  return new Map(\n    text.split(',').map((attrValue) => {\n      if (!/^.=/.test(attrValue)) {\n        throw new Error('SASL: Invalid attribute pair entry')\n      }\n      const name = attrValue[0]\n      const value = attrValue.substring(2)\n      return [name, value]\n    })\n  )\n}\n\nfunction parseServerFirstMessage(data) {\n  const attrPairs = parseAttributePairs(data)\n\n  const nonce = attrPairs.get('r')\n  if (!nonce) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing')\n  } else if (!isPrintableChars(nonce)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce must only contain printable characters')\n  }\n  const salt = attrPairs.get('s')\n  if (!salt) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing')\n  } else if (!isBase64(salt)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt must be base64')\n  }\n  const iterationText = attrPairs.get('i')\n  if (!iterationText) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: iteration missing')\n  } else if (!/^[1-9][0-9]*$/.test(iterationText)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: invalid iteration count')\n  }\n  const iteration = parseInt(iterationText, 10)\n\n  return {\n    nonce,\n    salt,\n    iteration,\n  }\n}\n\nfunction parseServerFinalMessage(serverData) {\n  const attrPairs = parseAttributePairs(serverData)\n  const serverSignature = attrPairs.get('v')\n  if (!serverSignature) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature is missing')\n  } else if (!isBase64(serverSignature)) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature must be base64')\n  }\n  return {\n    serverSignature,\n  }\n}\n\nfunction xorBuffers(a, b) {\n  if (!Buffer.isBuffer(a)) {\n    throw new TypeError('first argument must be a Buffer')\n  }\n  if (!Buffer.isBuffer(b)) {\n    throw new TypeError('second argument must be a Buffer')\n  }\n  if (a.length !== b.length) {\n    throw new Error('Buffer lengths must match')\n  }\n  if (a.length === 0) {\n    throw new Error('Buffers cannot be empty')\n  }\n  return Buffer.from(a.map((_, i) => a[i] ^ b[i]))\n}\n\nfunction sha256(text) {\n  return crypto.createHash('sha256').update(text).digest()\n}\n\nfunction hmacSha256(key, msg) {\n  return crypto.createHmac('sha256', key).update(msg).digest()\n}\n\nfunction Hi(password, saltBytes, iterations) {\n  var ui1 = hmacSha256(password, Buffer.concat([saltBytes, Buffer.from([0, 0, 0, 1])]))\n  var ui = ui1\n  for (var i = 0; i < iterations - 1; i++) {\n    ui1 = hmacSha256(password, ui1)\n    ui = xorBuffers(ui, ui1)\n  }\n\n  return ui\n}\n\nmodule.exports = {\n  startSession,\n  continueSession,\n  finalizeSession,\n}\n", "/*\nCopyright (c) 2014-2021, Matteo Collina <hello@matteocollina.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n'use strict'\n\nconst { Transform } = require('stream')\nconst { StringDecoder } = require('string_decoder')\nconst kLast = Symbol('last')\nconst kDecoder = Symbol('decoder')\n\nfunction transform (chunk, enc, cb) {\n  let list\n  if (this.overflow) { // Line buffer is full. Skip to start of next line.\n    const buf = this[kDecoder].write(chunk)\n    list = buf.split(this.matcher)\n\n    if (list.length === 1) return cb() // Line ending not found. Discard entire chunk.\n\n    // Line ending found. Discard trailing fragment of previous line and reset overflow state.\n    list.shift()\n    this.overflow = false\n  } else {\n    this[kLast] += this[kDecoder].write(chunk)\n    list = this[kLast].split(this.matcher)\n  }\n\n  this[kLast] = list.pop()\n\n  for (let i = 0; i < list.length; i++) {\n    try {\n      push(this, this.mapper(list[i]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  this.overflow = this[kLast].length > this.maxLength\n  if (this.overflow && !this.skipOverflow) {\n    cb(new Error('maximum buffer reached'))\n    return\n  }\n\n  cb()\n}\n\nfunction flush (cb) {\n  // forward any gibberish left in there\n  this[kLast] += this[kDecoder].end()\n\n  if (this[kLast]) {\n    try {\n      push(this, this.mapper(this[kLast]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  cb()\n}\n\nfunction push (self, val) {\n  if (val !== undefined) {\n    self.push(val)\n  }\n}\n\nfunction noop (incoming) {\n  return incoming\n}\n\nfunction split (matcher, mapper, options) {\n  // Set defaults for any arguments not supplied.\n  matcher = matcher || /\\r?\\n/\n  mapper = mapper || noop\n  options = options || {}\n\n  // Test arguments explicitly.\n  switch (arguments.length) {\n    case 1:\n      // If mapper is only argument.\n      if (typeof matcher === 'function') {\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If options is only argument.\n      } else if (typeof matcher === 'object' && !(matcher instanceof RegExp)) {\n        options = matcher\n        matcher = /\\r?\\n/\n      }\n      break\n\n    case 2:\n      // If mapper and options are arguments.\n      if (typeof matcher === 'function') {\n        options = mapper\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If matcher and options are arguments.\n      } else if (typeof mapper === 'object') {\n        options = mapper\n        mapper = noop\n      }\n  }\n\n  options = Object.assign({}, options)\n  options.autoDestroy = true\n  options.transform = transform\n  options.flush = flush\n  options.readableObjectMode = true\n\n  const stream = new Transform(options)\n\n  stream[kLast] = ''\n  stream[kDecoder] = new StringDecoder('utf8')\n  stream.matcher = matcher\n  stream.mapper = mapper\n  stream.maxLength = options.maxLength\n  stream.skipOverflow = options.skipOverflow || false\n  stream.overflow = false\n  stream._destroy = function (err, cb) {\n    // Weird Node v12 bug that we need to work around\n    this._writableState.errorEmitted = false\n    cb(err)\n  }\n\n  return stream\n}\n\nmodule.exports = split\n", "'use strict';\n\nvar path = require('path')\n  , Stream = require('stream').Stream\n  , split = require('split2')\n  , util = require('util')\n  , defaultPort = 5432\n  , isWin = (process.platform === 'win32')\n  , warnStream = process.stderr\n;\n\n\nvar S_IRWXG = 56     //    00070(8)\n  , S_IRWXO = 7      //    00007(8)\n  , S_IFMT  = 61440  // 00170000(8)\n  , S_IFREG = 32768  //  0100000(8)\n;\nfunction isRegFile(mode) {\n    return ((mode & S_IFMT) == S_IFREG);\n}\n\nvar fieldNames = [ 'host', 'port', 'database', 'user', 'password' ];\nvar nrOfFields = fieldNames.length;\nvar passKey = fieldNames[ nrOfFields -1 ];\n\n\nfunction warn() {\n    var isWritable = (\n        warnStream instanceof Stream &&\n          true === warnStream.writable\n    );\n\n    if (isWritable) {\n        var args = Array.prototype.slice.call(arguments).concat(\"\\n\");\n        warnStream.write( util.format.apply(util, args) );\n    }\n}\n\n\nObject.defineProperty(module.exports, 'isWin', {\n    get : function() {\n        return isWin;\n    } ,\n    set : function(val) {\n        isWin = val;\n    }\n});\n\n\nmodule.exports.warnTo = function(stream) {\n    var old = warnStream;\n    warnStream = stream;\n    return old;\n};\n\nmodule.exports.getFileName = function(rawEnv){\n    var env = rawEnv || process.env;\n    var file = env.PGPASSFILE || (\n        isWin ?\n          path.join( env.APPDATA || './' , 'postgresql', 'pgpass.conf' ) :\n          path.join( env.HOME || './', '.pgpass' )\n    );\n    return file;\n};\n\nmodule.exports.usePgPass = function(stats, fname) {\n    if (Object.prototype.hasOwnProperty.call(process.env, 'PGPASSWORD')) {\n        return false;\n    }\n\n    if (isWin) {\n        return true;\n    }\n\n    fname = fname || '<unkn>';\n\n    if (! isRegFile(stats.mode)) {\n        warn('WARNING: password file \"%s\" is not a plain file', fname);\n        return false;\n    }\n\n    if (stats.mode & (S_IRWXG | S_IRWXO)) {\n        /* If password file is insecure, alert the user and ignore it. */\n        warn('WARNING: password file \"%s\" has group or world access; permissions should be u=rw (0600) or less', fname);\n        return false;\n    }\n\n    return true;\n};\n\n\nvar matcher = module.exports.match = function(connInfo, entry) {\n    return fieldNames.slice(0, -1).reduce(function(prev, field, idx){\n        if (idx == 1) {\n            // the port\n            if ( Number( connInfo[field] || defaultPort ) === Number( entry[field] ) ) {\n                return prev && true;\n            }\n        }\n        return prev && (\n            entry[field] === '*' ||\n              entry[field] === connInfo[field]\n        );\n    }, true);\n};\n\n\nmodule.exports.getPassword = function(connInfo, stream, cb) {\n    var pass;\n    var lineStream = stream.pipe(split());\n\n    function onLine(line) {\n        var entry = parseLine(line);\n        if (entry && isValidEntry(entry) && matcher(connInfo, entry)) {\n            pass = entry[passKey];\n            lineStream.end(); // -> calls onEnd(), but pass is set now\n        }\n    }\n\n    var onEnd = function() {\n        stream.destroy();\n        cb(pass);\n    };\n\n    var onErr = function(err) {\n        stream.destroy();\n        warn('WARNING: error on reading file: %s', err);\n        cb(undefined);\n    };\n\n    stream.on('error', onErr);\n    lineStream\n        .on('data', onLine)\n        .on('end', onEnd)\n        .on('error', onErr)\n    ;\n\n};\n\n\nvar parseLine = module.exports.parseLine = function(line) {\n    if (line.length < 11 || line.match(/^\\s+#/)) {\n        return null;\n    }\n\n    var curChar = '';\n    var prevChar = '';\n    var fieldIdx = 0;\n    var startIdx = 0;\n    var endIdx = 0;\n    var obj = {};\n    var isLastField = false;\n    var addToObj = function(idx, i0, i1) {\n        var field = line.substring(i0, i1);\n\n        if (! Object.hasOwnProperty.call(process.env, 'PGPASS_NO_DEESCAPE')) {\n            field = field.replace(/\\\\([:\\\\])/g, '$1');\n        }\n\n        obj[ fieldNames[idx] ] = field;\n    };\n\n    for (var i = 0 ; i < line.length-1 ; i += 1) {\n        curChar = line.charAt(i+1);\n        prevChar = line.charAt(i);\n\n        isLastField = (fieldIdx == nrOfFields-1);\n\n        if (isLastField) {\n            addToObj(fieldIdx, startIdx);\n            break;\n        }\n\n        if (i >= 0 && curChar == ':' && prevChar !== '\\\\') {\n            addToObj(fieldIdx, startIdx, i+1);\n\n            startIdx = i+2;\n            fieldIdx += 1;\n        }\n    }\n\n    obj = ( Object.keys(obj).length === nrOfFields ) ? obj : null;\n\n    return obj;\n};\n\n\nvar isValidEntry = module.exports.isValidEntry = function(entry){\n    var rules = {\n        // host\n        0 : function(x){\n            return x.length > 0;\n        } ,\n        // port\n        1 : function(x){\n            if (x === '*') {\n                return true;\n            }\n            x = Number(x);\n            return (\n                isFinite(x) &&\n                  x > 0 &&\n                  x < 9007199254740992 &&\n                  Math.floor(x) === x\n            );\n        } ,\n        // database\n        2 : function(x){\n            return x.length > 0;\n        } ,\n        // username\n        3 : function(x){\n            return x.length > 0;\n        } ,\n        // password\n        4 : function(x){\n            return x.length > 0;\n        }\n    };\n\n    for (var idx = 0 ; idx < fieldNames.length ; idx += 1) {\n        var rule = rules[idx];\n        var value = entry[ fieldNames[idx] ] || '';\n\n        var res = rule(value);\n        if (!res) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n", "'use strict';\n\nvar path = require('path')\n  , fs = require('fs')\n  , helper = require('./helper.js')\n;\n\n\nmodule.exports = function(connInfo, cb) {\n    var file = helper.getFileName();\n    \n    fs.stat(file, function(err, stat){\n        if (err || !helper.usePgPass(stat, file)) {\n            return cb(undefined);\n        }\n\n        var st = fs.createReadStream(file);\n\n        helper.getPassword(connInfo, st, cb);\n    });\n};\n\nmodule.exports.warnTo = helper.warnTo;\n", "'use strict'\n\nvar types = require('pg-types')\n\nfunction TypeOverrides(userTypes) {\n  this._types = userTypes || types\n  this.text = {}\n  this.binary = {}\n}\n\nTypeOverrides.prototype.getOverrides = function (format) {\n  switch (format) {\n    case 'text':\n      return this.text\n    case 'binary':\n      return this.binary\n    default:\n      return {}\n  }\n}\n\nTypeOverrides.prototype.setTypeParser = function (oid, format, parseFn) {\n  if (typeof format === 'function') {\n    parseFn = format\n    format = 'text'\n  }\n  this.getOverrides(format)[oid] = parseFn\n}\n\nTypeOverrides.prototype.getTypeParser = function (oid, format) {\n  format = format || 'text'\n  return this.getOverrides(format)[oid] || this._types.getTypeParser(oid, format)\n}\n\nmodule.exports = TypeOverrides\n", "'use strict'\n\nvar url = require('url')\nvar fs = require('fs')\n\n//Parse method copied from https://github.com/brianc/node-postgres\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n//MIT License\n\n//parses a connection string\nfunction parse(str) {\n  //unix socket\n  if (str.charAt(0) === '/') {\n    var config = str.split(' ')\n    return { host: config[0], database: config[1] }\n  }\n\n  // url parse expects spaces encoded as %20\n  var result = url.parse(\n    / |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str) ? encodeURI(str).replace(/\\%25(\\d\\d)/g, '%$1') : str,\n    true\n  )\n  var config = result.query\n  for (var k in config) {\n    if (Array.isArray(config[k])) {\n      config[k] = config[k][config[k].length - 1]\n    }\n  }\n\n  var auth = (result.auth || ':').split(':')\n  config.user = auth[0]\n  config.password = auth.splice(1).join(':')\n\n  config.port = result.port\n  if (result.protocol == 'socket:') {\n    config.host = decodeURI(result.pathname)\n    config.database = result.query.db\n    config.client_encoding = result.query.encoding\n    return config\n  }\n  if (!config.host) {\n    // Only set the host if there is no equivalent query param.\n    config.host = result.hostname\n  }\n\n  // If the host is missing it might be a URL-encoded path to a socket.\n  var pathname = result.pathname\n  if (!config.host && pathname && /^%2f/i.test(pathname)) {\n    var pathnameSplit = pathname.split('/')\n    config.host = decodeURIComponent(pathnameSplit[0])\n    pathname = pathnameSplit.splice(1).join('/')\n  }\n  // result.pathname is not always guaranteed to have a '/' prefix (e.g. relative urls)\n  // only strip the slash if it is present.\n  if (pathname && pathname.charAt(0) === '/') {\n    pathname = pathname.slice(1) || null\n  }\n  config.database = pathname && decodeURI(pathname)\n\n  if (config.ssl === 'true' || config.ssl === '1') {\n    config.ssl = true\n  }\n\n  if (config.ssl === '0') {\n    config.ssl = false\n  }\n\n  if (config.sslcert || config.sslkey || config.sslrootcert || config.sslmode) {\n    config.ssl = {}\n  }\n\n  if (config.sslcert) {\n    config.ssl.cert = fs.readFileSync(config.sslcert).toString()\n  }\n\n  if (config.sslkey) {\n    config.ssl.key = fs.readFileSync(config.sslkey).toString()\n  }\n\n  if (config.sslrootcert) {\n    config.ssl.ca = fs.readFileSync(config.sslrootcert).toString()\n  }\n\n  switch (config.sslmode) {\n    case 'disable': {\n      config.ssl = false\n      break\n    }\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full': {\n      break\n    }\n    case 'no-verify': {\n      config.ssl.rejectUnauthorized = false\n      break\n    }\n  }\n\n  return config\n}\n\nmodule.exports = parse\n\nparse.parse = parse\n", "'use strict'\n\nvar dns = require('dns')\n\nvar defaults = require('./defaults')\n\nvar parse = require('pg-connection-string').parse // parses a connection string\n\nvar val = function (key, config, envVar) {\n  if (envVar === undefined) {\n    envVar = process.env['PG' + key.toUpperCase()]\n  } else if (envVar === false) {\n    // do nothing ... use false\n  } else {\n    envVar = process.env[envVar]\n  }\n\n  return config[key] || envVar || defaults[key]\n}\n\nvar readSSLConfigFromEnvironment = function () {\n  switch (process.env.PGSSLMODE) {\n    case 'disable':\n      return false\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full':\n      return true\n    case 'no-verify':\n      return { rejectUnauthorized: false }\n  }\n  return defaults.ssl\n}\n\n// Convert arg to a string, surround in single quotes, and escape single quotes and backslashes\nvar quoteParamValue = function (value) {\n  return \"'\" + ('' + value).replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\") + \"'\"\n}\n\nvar add = function (params, config, paramName) {\n  var value = config[paramName]\n  if (value !== undefined && value !== null) {\n    params.push(paramName + '=' + quoteParamValue(value))\n  }\n}\n\nclass ConnectionParameters {\n  constructor(config) {\n    // if a string is passed, it is a raw connection string so we parse it into a config\n    config = typeof config === 'string' ? parse(config) : config || {}\n\n    // if the config has a connectionString defined, parse IT into the config we use\n    // this will override other default values with what is stored in connectionString\n    if (config.connectionString) {\n      config = Object.assign({}, config, parse(config.connectionString))\n    }\n\n    this.user = val('user', config)\n    this.database = val('database', config)\n\n    if (this.database === undefined) {\n      this.database = this.user\n    }\n\n    this.port = parseInt(val('port', config), 10)\n    this.host = val('host', config)\n\n    // \"hiding\" the password so it doesn't show up in stack traces\n    // or if the client is console.logged\n    Object.defineProperty(this, 'password', {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: val('password', config),\n    })\n\n    this.binary = val('binary', config)\n    this.options = val('options', config)\n\n    this.ssl = typeof config.ssl === 'undefined' ? readSSLConfigFromEnvironment() : config.ssl\n\n    if (typeof this.ssl === 'string') {\n      if (this.ssl === 'true') {\n        this.ssl = true\n      }\n    }\n    // support passing in ssl=no-verify via connection string\n    if (this.ssl === 'no-verify') {\n      this.ssl = { rejectUnauthorized: false }\n    }\n    if (this.ssl && this.ssl.key) {\n      Object.defineProperty(this.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this.client_encoding = val('client_encoding', config)\n    this.replication = val('replication', config)\n    // a domain socket begins with '/'\n    this.isDomainSocket = !(this.host || '').indexOf('/')\n\n    this.application_name = val('application_name', config, 'PGAPPNAME')\n    this.fallback_application_name = val('fallback_application_name', config, false)\n    this.statement_timeout = val('statement_timeout', config, false)\n    this.idle_in_transaction_session_timeout = val('idle_in_transaction_session_timeout', config, false)\n    this.query_timeout = val('query_timeout', config, false)\n\n    if (config.connectionTimeoutMillis === undefined) {\n      this.connect_timeout = process.env.PGCONNECT_TIMEOUT || 0\n    } else {\n      this.connect_timeout = Math.floor(config.connectionTimeoutMillis / 1000)\n    }\n\n    if (config.keepAlive === false) {\n      this.keepalives = 0\n    } else if (config.keepAlive === true) {\n      this.keepalives = 1\n    }\n\n    if (typeof config.keepAliveInitialDelayMillis === 'number') {\n      this.keepalives_idle = Math.floor(config.keepAliveInitialDelayMillis / 1000)\n    }\n  }\n\n  getLibpqConnectionString(cb) {\n    var params = []\n    add(params, this, 'user')\n    add(params, this, 'password')\n    add(params, this, 'port')\n    add(params, this, 'application_name')\n    add(params, this, 'fallback_application_name')\n    add(params, this, 'connect_timeout')\n    add(params, this, 'options')\n\n    var ssl = typeof this.ssl === 'object' ? this.ssl : this.ssl ? { sslmode: this.ssl } : {}\n    add(params, ssl, 'sslmode')\n    add(params, ssl, 'sslca')\n    add(params, ssl, 'sslkey')\n    add(params, ssl, 'sslcert')\n    add(params, ssl, 'sslrootcert')\n\n    if (this.database) {\n      params.push('dbname=' + quoteParamValue(this.database))\n    }\n    if (this.replication) {\n      params.push('replication=' + quoteParamValue(this.replication))\n    }\n    if (this.host) {\n      params.push('host=' + quoteParamValue(this.host))\n    }\n    if (this.isDomainSocket) {\n      return cb(null, params.join(' '))\n    }\n    if (this.client_encoding) {\n      params.push('client_encoding=' + quoteParamValue(this.client_encoding))\n    }\n    dns.lookup(this.host, function (err, address) {\n      if (err) return cb(err, null)\n      params.push('hostaddr=' + quoteParamValue(address))\n      return cb(null, params.join(' '))\n    })\n  }\n}\n\nmodule.exports = ConnectionParameters\n", "'use strict'\n\nvar types = require('pg-types')\n\nvar matchRegexp = /^([A-Za-z]+)(?: (\\d+))?(?: (\\d+))?/\n\n// result object returned from query\n// in the 'end' event and also\n// passed as second argument to provided callback\nclass Result {\n  constructor(rowMode, types) {\n    this.command = null\n    this.rowCount = null\n    this.oid = null\n    this.rows = []\n    this.fields = []\n    this._parsers = undefined\n    this._types = types\n    this.RowCtor = null\n    this.rowAsArray = rowMode === 'array'\n    if (this.rowAsArray) {\n      this.parseRow = this._parseRowAsArray\n    }\n  }\n\n  // adds a command complete message\n  addCommandComplete(msg) {\n    var match\n    if (msg.text) {\n      // pure javascript\n      match = matchRegexp.exec(msg.text)\n    } else {\n      // native bindings\n      match = matchRegexp.exec(msg.command)\n    }\n    if (match) {\n      this.command = match[1]\n      if (match[3]) {\n        // COMMMAND OID ROWS\n        this.oid = parseInt(match[2], 10)\n        this.rowCount = parseInt(match[3], 10)\n      } else if (match[2]) {\n        // COMMAND ROWS\n        this.rowCount = parseInt(match[2], 10)\n      }\n    }\n  }\n\n  _parseRowAsArray(rowData) {\n    var row = new Array(rowData.length)\n    for (var i = 0, len = rowData.length; i < len; i++) {\n      var rawValue = rowData[i]\n      if (rawValue !== null) {\n        row[i] = this._parsers[i](rawValue)\n      } else {\n        row[i] = null\n      }\n    }\n    return row\n  }\n\n  parseRow(rowData) {\n    var row = {}\n    for (var i = 0, len = rowData.length; i < len; i++) {\n      var rawValue = rowData[i]\n      var field = this.fields[i].name\n      if (rawValue !== null) {\n        row[field] = this._parsers[i](rawValue)\n      } else {\n        row[field] = null\n      }\n    }\n    return row\n  }\n\n  addRow(row) {\n    this.rows.push(row)\n  }\n\n  addFields(fieldDescriptions) {\n    // clears field definitions\n    // multiple query statements in 1 action can result in multiple sets\n    // of rowDescriptions...eg: 'select NOW(); select 1::int;'\n    // you need to reset the fields\n    this.fields = fieldDescriptions\n    if (this.fields.length) {\n      this._parsers = new Array(fieldDescriptions.length)\n    }\n    for (var i = 0; i < fieldDescriptions.length; i++) {\n      var desc = fieldDescriptions[i]\n      if (this._types) {\n        this._parsers[i] = this._types.getTypeParser(desc.dataTypeID, desc.format || 'text')\n      } else {\n        this._parsers[i] = types.getTypeParser(desc.dataTypeID, desc.format || 'text')\n      }\n    }\n  }\n}\n\nmodule.exports = Result\n", "'use strict'\n\nconst { EventEmitter } = require('events')\n\nconst Result = require('./result')\nconst utils = require('./utils')\n\nclass Query extends EventEmitter {\n  constructor(config, values, callback) {\n    super()\n\n    config = utils.normalizeQueryConfig(config, values, callback)\n\n    this.text = config.text\n    this.values = config.values\n    this.rows = config.rows\n    this.types = config.types\n    this.name = config.name\n    this.binary = config.binary\n    // use unique portal name each time\n    this.portal = config.portal || ''\n    this.callback = config.callback\n    this._rowMode = config.rowMode\n    if (process.domain && config.callback) {\n      this.callback = process.domain.bind(config.callback)\n    }\n    this._result = new Result(this._rowMode, this.types)\n\n    // potential for multiple results\n    this._results = this._result\n    this.isPreparedStatement = false\n    this._canceledDueToError = false\n    this._promise = null\n  }\n\n  requiresPreparation() {\n    // named queries must always be prepared\n    if (this.name) {\n      return true\n    }\n    // always prepare if there are max number of rows expected per\n    // portal execution\n    if (this.rows) {\n      return true\n    }\n    // don't prepare empty text queries\n    if (!this.text) {\n      return false\n    }\n    // prepare if there are values\n    if (!this.values) {\n      return false\n    }\n    return this.values.length > 0\n  }\n\n  _checkForMultirow() {\n    // if we already have a result with a command property\n    // then we've already executed one query in a multi-statement simple query\n    // turn our results into an array of results\n    if (this._result.command) {\n      if (!Array.isArray(this._results)) {\n        this._results = [this._result]\n      }\n      this._result = new Result(this._rowMode, this.types)\n      this._results.push(this._result)\n    }\n  }\n\n  // associates row metadata from the supplied\n  // message with this query object\n  // metadata used when parsing row results\n  handleRowDescription(msg) {\n    this._checkForMultirow()\n    this._result.addFields(msg.fields)\n    this._accumulateRows = this.callback || !this.listeners('row').length\n  }\n\n  handleDataRow(msg) {\n    let row\n\n    if (this._canceledDueToError) {\n      return\n    }\n\n    try {\n      row = this._result.parseRow(msg.fields)\n    } catch (err) {\n      this._canceledDueToError = err\n      return\n    }\n\n    this.emit('row', row, this._result)\n    if (this._accumulateRows) {\n      this._result.addRow(row)\n    }\n  }\n\n  handleCommandComplete(msg, connection) {\n    this._checkForMultirow()\n    this._result.addCommandComplete(msg)\n    // need to sync after each command complete of a prepared statement\n    // if we were using a row count which results in multiple calls to _getRows\n    if (this.rows) {\n      connection.sync()\n    }\n  }\n\n  // if a named prepared statement is created with empty query text\n  // the backend will send an emptyQuery message but *not* a command complete message\n  // since we pipeline sync immediately after execute we don't need to do anything here\n  // unless we have rows specified, in which case we did not pipeline the intial sync call\n  handleEmptyQuery(connection) {\n    if (this.rows) {\n      connection.sync()\n    }\n  }\n\n  handleError(err, connection) {\n    // need to sync after error during a prepared statement\n    if (this._canceledDueToError) {\n      err = this._canceledDueToError\n      this._canceledDueToError = false\n    }\n    // if callback supplied do not emit error event as uncaught error\n    // events will bubble up to node process\n    if (this.callback) {\n      return this.callback(err)\n    }\n    this.emit('error', err)\n  }\n\n  handleReadyForQuery(con) {\n    if (this._canceledDueToError) {\n      return this.handleError(this._canceledDueToError, con)\n    }\n    if (this.callback) {\n      this.callback(null, this._results)\n    }\n    this.emit('end', this._results)\n  }\n\n  submit(connection) {\n    if (typeof this.text !== 'string' && typeof this.name !== 'string') {\n      return new Error('A query must have either text or a name. Supplying neither is unsupported.')\n    }\n    const previous = connection.parsedStatements[this.name]\n    if (this.text && previous && this.text !== previous) {\n      return new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\n    }\n    if (this.values && !Array.isArray(this.values)) {\n      return new Error('Query values must be an array')\n    }\n    if (this.requiresPreparation()) {\n      this.prepare(connection)\n    } else {\n      connection.query(this.text)\n    }\n    return null\n  }\n\n  hasBeenParsed(connection) {\n    return this.name && connection.parsedStatements[this.name]\n  }\n\n  handlePortalSuspended(connection) {\n    this._getRows(connection, this.rows)\n  }\n\n  _getRows(connection, rows) {\n    connection.execute({\n      portal: this.portal,\n      rows: rows,\n    })\n    // if we're not reading pages of rows send the sync command\n    // to indicate the pipeline is finished\n    if (!rows) {\n      connection.sync()\n    } else {\n      // otherwise flush the call out to read more rows\n      connection.flush()\n    }\n  }\n\n  // http://developer.postgresql.org/pgdocs/postgres/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY\n  prepare(connection) {\n    // prepared statements need sync to be called after each command\n    // complete or when an error is encountered\n    this.isPreparedStatement = true\n\n    // TODO refactor this poor encapsulation\n    if (!this.hasBeenParsed(connection)) {\n      connection.parse({\n        text: this.text,\n        name: this.name,\n        types: this.types,\n      })\n    }\n\n    // because we're mapping user supplied values to\n    // postgres wire protocol compatible values it could\n    // throw an exception, so try/catch this section\n    try {\n      connection.bind({\n        portal: this.portal,\n        statement: this.name,\n        values: this.values,\n        binary: this.binary,\n        valueMapper: utils.prepareValue,\n      })\n    } catch (err) {\n      this.handleError(err, connection)\n      return\n    }\n\n    connection.describe({\n      type: 'P',\n      name: this.portal || '',\n    })\n\n    this._getRows(connection, this.rows)\n  }\n\n  handleCopyInResponse(connection) {\n    connection.sendCopyFail('No source stream defined')\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  handleCopyData(msg, connection) {\n    // noop\n  }\n}\n\nmodule.exports = Query\n", null, null, null, null, null, null, "'use strict'\n\nvar net = require('net')\nvar EventEmitter = require('events').EventEmitter\n\nconst { parse, serialize } = require('pg-protocol')\n\nconst flushBuffer = serialize.flush()\nconst syncBuffer = serialize.sync()\nconst endBuffer = serialize.end()\n\n// TODO(bmc) support binary mode at some point\nclass Connection extends EventEmitter {\n  constructor(config) {\n    super()\n    config = config || {}\n    this.stream = config.stream || new net.Socket()\n    this._keepAlive = config.keepAlive\n    this._keepAliveInitialDelayMillis = config.keepAliveInitialDelayMillis\n    this.lastBuffer = false\n    this.parsedStatements = {}\n    this.ssl = config.ssl || false\n    this._ending = false\n    this._emitMessage = false\n    var self = this\n    this.on('newListener', function (eventName) {\n      if (eventName === 'message') {\n        self._emitMessage = true\n      }\n    })\n  }\n\n  connect(port, host) {\n    var self = this\n\n    this._connecting = true\n    this.stream.setNoDelay(true)\n    this.stream.connect(port, host)\n\n    this.stream.once('connect', function () {\n      if (self._keepAlive) {\n        self.stream.setKeepAlive(true, self._keepAliveInitialDelayMillis)\n      }\n      self.emit('connect')\n    })\n\n    const reportStreamError = function (error) {\n      // errors about disconnections should be ignored during disconnect\n      if (self._ending && (error.code === 'ECONNRESET' || error.code === 'EPIPE')) {\n        return\n      }\n      self.emit('error', error)\n    }\n    this.stream.on('error', reportStreamError)\n\n    this.stream.on('close', function () {\n      self.emit('end')\n    })\n\n    if (!this.ssl) {\n      return this.attachListeners(this.stream)\n    }\n\n    this.stream.once('data', function (buffer) {\n      var responseCode = buffer.toString('utf8')\n      switch (responseCode) {\n        case 'S': // Server supports SSL connections, continue with a secure connection\n          break\n        case 'N': // Server does not support SSL connections\n          self.stream.end()\n          return self.emit('error', new Error('The server does not support SSL connections'))\n        default:\n          // Any other response byte, including 'E' (ErrorResponse) indicating a server error\n          self.stream.end()\n          return self.emit('error', new Error('There was an error establishing an SSL connection'))\n      }\n      var tls = require('tls')\n      const options = {\n        socket: self.stream,\n      }\n\n      if (self.ssl !== true) {\n        Object.assign(options, self.ssl)\n\n        if ('key' in self.ssl) {\n          options.key = self.ssl.key\n        }\n      }\n\n      if (net.isIP(host) === 0) {\n        options.servername = host\n      }\n      try {\n        self.stream = tls.connect(options)\n      } catch (err) {\n        return self.emit('error', err)\n      }\n      self.attachListeners(self.stream)\n      self.stream.on('error', reportStreamError)\n\n      self.emit('sslconnect')\n    })\n  }\n\n  attachListeners(stream) {\n    stream.on('end', () => {\n      this.emit('end')\n    })\n    parse(stream, (msg) => {\n      var eventName = msg.name === 'error' ? 'errorMessage' : msg.name\n      if (this._emitMessage) {\n        this.emit('message', msg)\n      }\n      this.emit(eventName, msg)\n    })\n  }\n\n  requestSsl() {\n    this.stream.write(serialize.requestSsl())\n  }\n\n  startup(config) {\n    this.stream.write(serialize.startup(config))\n  }\n\n  cancel(processID, secretKey) {\n    this._send(serialize.cancel(processID, secretKey))\n  }\n\n  password(password) {\n    this._send(serialize.password(password))\n  }\n\n  sendSASLInitialResponseMessage(mechanism, initialResponse) {\n    this._send(serialize.sendSASLInitialResponseMessage(mechanism, initialResponse))\n  }\n\n  sendSCRAMClientFinalMessage(additionalData) {\n    this._send(serialize.sendSCRAMClientFinalMessage(additionalData))\n  }\n\n  _send(buffer) {\n    if (!this.stream.writable) {\n      return false\n    }\n    return this.stream.write(buffer)\n  }\n\n  query(text) {\n    this._send(serialize.query(text))\n  }\n\n  // send parse message\n  parse(query) {\n    this._send(serialize.parse(query))\n  }\n\n  // send bind message\n  bind(config) {\n    this._send(serialize.bind(config))\n  }\n\n  // send execute message\n  execute(config) {\n    this._send(serialize.execute(config))\n  }\n\n  flush() {\n    if (this.stream.writable) {\n      this.stream.write(flushBuffer)\n    }\n  }\n\n  sync() {\n    this._ending = true\n    this._send(flushBuffer)\n    this._send(syncBuffer)\n  }\n\n  ref() {\n    this.stream.ref()\n  }\n\n  unref() {\n    this.stream.unref()\n  }\n\n  end() {\n    // 0x58 = 'X'\n    this._ending = true\n    if (!this._connecting || !this.stream.writable) {\n      this.stream.end()\n      return\n    }\n    return this.stream.write(endBuffer, () => {\n      this.stream.end()\n    })\n  }\n\n  close(msg) {\n    this._send(serialize.close(msg))\n  }\n\n  describe(msg) {\n    this._send(serialize.describe(msg))\n  }\n\n  sendCopyFromChunk(chunk) {\n    this._send(serialize.copyData(chunk))\n  }\n\n  endCopyFrom() {\n    this._send(serialize.copyDone())\n  }\n\n  sendCopyFail(msg) {\n    this._send(serialize.copyFail(msg))\n  }\n}\n\nmodule.exports = Connection\n", "'use strict'\n\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar utils = require('./utils')\nvar sasl = require('./sasl')\nvar pgPass = require('pgpass')\nvar TypeOverrides = require('./type-overrides')\n\nvar ConnectionParameters = require('./connection-parameters')\nvar Query = require('./query')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\n\nclass Client extends EventEmitter {\n  constructor(config) {\n    super()\n\n    this.connectionParameters = new ConnectionParameters(config)\n    this.user = this.connectionParameters.user\n    this.database = this.connectionParameters.database\n    this.port = this.connectionParameters.port\n    this.host = this.connectionParameters.host\n\n    // \"hiding\" the password so it doesn't show up in stack traces\n    // or if the client is console.logged\n    Object.defineProperty(this, 'password', {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: this.connectionParameters.password,\n    })\n\n    this.replication = this.connectionParameters.replication\n\n    var c = config || {}\n\n    this._Promise = c.Promise || global.Promise\n    this._types = new TypeOverrides(c.types)\n    this._ending = false\n    this._connecting = false\n    this._connected = false\n    this._connectionError = false\n    this._queryable = true\n\n    this.connection =\n      c.connection ||\n      new Connection({\n        stream: c.stream,\n        ssl: this.connectionParameters.ssl,\n        keepAlive: c.keepAlive || false,\n        keepAliveInitialDelayMillis: c.keepAliveInitialDelayMillis || 0,\n        encoding: this.connectionParameters.client_encoding || 'utf8',\n      })\n    this.queryQueue = []\n    this.binary = c.binary || defaults.binary\n    this.processID = null\n    this.secretKey = null\n    this.ssl = this.connectionParameters.ssl || false\n    // As with Password, make SSL->Key (the private key) non-enumerable.\n    // It won't show up in stack traces\n    // or if the client is console.logged\n    if (this.ssl && this.ssl.key) {\n      Object.defineProperty(this.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this._connectionTimeoutMillis = c.connectionTimeoutMillis || 0\n  }\n\n  _errorAllQueries(err) {\n    const enqueueError = (query) => {\n      process.nextTick(() => {\n        query.handleError(err, this.connection)\n      })\n    }\n\n    if (this.activeQuery) {\n      enqueueError(this.activeQuery)\n      this.activeQuery = null\n    }\n\n    this.queryQueue.forEach(enqueueError)\n    this.queryQueue.length = 0\n  }\n\n  _connect(callback) {\n    var self = this\n    var con = this.connection\n    this._connectionCallback = callback\n\n    if (this._connecting || this._connected) {\n      const err = new Error('Client has already been connected. You cannot reuse a client.')\n      process.nextTick(() => {\n        callback(err)\n      })\n      return\n    }\n    this._connecting = true\n\n    this.connectionTimeoutHandle\n    if (this._connectionTimeoutMillis > 0) {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        con._ending = true\n        con.stream.destroy(new Error('timeout expired'))\n      }, this._connectionTimeoutMillis)\n    }\n\n    if (this.host && this.host.indexOf('/') === 0) {\n      con.connect(this.host + '/.s.PGSQL.' + this.port)\n    } else {\n      con.connect(this.port, this.host)\n    }\n\n    // once connection is established send startup message\n    con.on('connect', function () {\n      if (self.ssl) {\n        con.requestSsl()\n      } else {\n        con.startup(self.getStartupConf())\n      }\n    })\n\n    con.on('sslconnect', function () {\n      con.startup(self.getStartupConf())\n    })\n\n    this._attachListeners(con)\n\n    con.once('end', () => {\n      const error = this._ending ? new Error('Connection terminated') : new Error('Connection terminated unexpectedly')\n\n      clearTimeout(this.connectionTimeoutHandle)\n      this._errorAllQueries(error)\n\n      if (!this._ending) {\n        // if the connection is ended without us calling .end()\n        // on this client then we have an unexpected disconnection\n        // treat this as an error unless we've already emitted an error\n        // during connection.\n        if (this._connecting && !this._connectionError) {\n          if (this._connectionCallback) {\n            this._connectionCallback(error)\n          } else {\n            this._handleErrorEvent(error)\n          }\n        } else if (!this._connectionError) {\n          this._handleErrorEvent(error)\n        }\n      }\n\n      process.nextTick(() => {\n        this.emit('end')\n      })\n    })\n  }\n\n  connect(callback) {\n    if (callback) {\n      this._connect(callback)\n      return\n    }\n\n    return new this._Promise((resolve, reject) => {\n      this._connect((error) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve()\n        }\n      })\n    })\n  }\n\n  _attachListeners(con) {\n    // password request handling\n    con.on('authenticationCleartextPassword', this._handleAuthCleartextPassword.bind(this))\n    // password request handling\n    con.on('authenticationMD5Password', this._handleAuthMD5Password.bind(this))\n    // password request handling (SASL)\n    con.on('authenticationSASL', this._handleAuthSASL.bind(this))\n    con.on('authenticationSASLContinue', this._handleAuthSASLContinue.bind(this))\n    con.on('authenticationSASLFinal', this._handleAuthSASLFinal.bind(this))\n    con.on('backendKeyData', this._handleBackendKeyData.bind(this))\n    con.on('error', this._handleErrorEvent.bind(this))\n    con.on('errorMessage', this._handleErrorMessage.bind(this))\n    con.on('readyForQuery', this._handleReadyForQuery.bind(this))\n    con.on('notice', this._handleNotice.bind(this))\n    con.on('rowDescription', this._handleRowDescription.bind(this))\n    con.on('dataRow', this._handleDataRow.bind(this))\n    con.on('portalSuspended', this._handlePortalSuspended.bind(this))\n    con.on('emptyQuery', this._handleEmptyQuery.bind(this))\n    con.on('commandComplete', this._handleCommandComplete.bind(this))\n    con.on('parseComplete', this._handleParseComplete.bind(this))\n    con.on('copyInResponse', this._handleCopyInResponse.bind(this))\n    con.on('copyData', this._handleCopyData.bind(this))\n    con.on('notification', this._handleNotification.bind(this))\n  }\n\n  // TODO(bmc): deprecate pgpass \"built in\" integration since this.password can be a function\n  // it can be supplied by the user if required - this is a breaking change!\n  _checkPgPass(cb) {\n    const con = this.connection\n    if (typeof this.password === 'function') {\n      this._Promise\n        .resolve()\n        .then(() => this.password())\n        .then((pass) => {\n          if (pass !== undefined) {\n            if (typeof pass !== 'string') {\n              con.emit('error', new TypeError('Password must be a string'))\n              return\n            }\n            this.connectionParameters.password = this.password = pass\n          } else {\n            this.connectionParameters.password = this.password = null\n          }\n          cb()\n        })\n        .catch((err) => {\n          con.emit('error', err)\n        })\n    } else if (this.password !== null) {\n      cb()\n    } else {\n      pgPass(this.connectionParameters, (pass) => {\n        if (undefined !== pass) {\n          this.connectionParameters.password = this.password = pass\n        }\n        cb()\n      })\n    }\n  }\n\n  _handleAuthCleartextPassword(msg) {\n    this._checkPgPass(() => {\n      this.connection.password(this.password)\n    })\n  }\n\n  _handleAuthMD5Password(msg) {\n    this._checkPgPass(() => {\n      const hashedPassword = utils.postgresMd5PasswordHash(this.user, this.password, msg.salt)\n      this.connection.password(hashedPassword)\n    })\n  }\n\n  _handleAuthSASL(msg) {\n    this._checkPgPass(() => {\n      this.saslSession = sasl.startSession(msg.mechanisms)\n      this.connection.sendSASLInitialResponseMessage(this.saslSession.mechanism, this.saslSession.response)\n    })\n  }\n\n  _handleAuthSASLContinue(msg) {\n    sasl.continueSession(this.saslSession, this.password, msg.data)\n    this.connection.sendSCRAMClientFinalMessage(this.saslSession.response)\n  }\n\n  _handleAuthSASLFinal(msg) {\n    sasl.finalizeSession(this.saslSession, msg.data)\n    this.saslSession = null\n  }\n\n  _handleBackendKeyData(msg) {\n    this.processID = msg.processID\n    this.secretKey = msg.secretKey\n  }\n\n  _handleReadyForQuery(msg) {\n    if (this._connecting) {\n      this._connecting = false\n      this._connected = true\n      clearTimeout(this.connectionTimeoutHandle)\n\n      // process possible callback argument to Client#connect\n      if (this._connectionCallback) {\n        this._connectionCallback(null, this)\n        // remove callback for proper error handling\n        // after the connect event\n        this._connectionCallback = null\n      }\n      this.emit('connect')\n    }\n    const { activeQuery } = this\n    this.activeQuery = null\n    this.readyForQuery = true\n    if (activeQuery) {\n      activeQuery.handleReadyForQuery(this.connection)\n    }\n    this._pulseQueryQueue()\n  }\n\n  // if we receieve an error event or error message\n  // during the connection process we handle it here\n  _handleErrorWhileConnecting(err) {\n    if (this._connectionError) {\n      // TODO(bmc): this is swallowing errors - we shouldn't do this\n      return\n    }\n    this._connectionError = true\n    clearTimeout(this.connectionTimeoutHandle)\n    if (this._connectionCallback) {\n      return this._connectionCallback(err)\n    }\n    this.emit('error', err)\n  }\n\n  // if we're connected and we receive an error event from the connection\n  // this means the socket is dead - do a hard abort of all queries and emit\n  // the socket error on the client as well\n  _handleErrorEvent(err) {\n    if (this._connecting) {\n      return this._handleErrorWhileConnecting(err)\n    }\n    this._queryable = false\n    this._errorAllQueries(err)\n    this.emit('error', err)\n  }\n\n  // handle error messages from the postgres backend\n  _handleErrorMessage(msg) {\n    if (this._connecting) {\n      return this._handleErrorWhileConnecting(msg)\n    }\n    const activeQuery = this.activeQuery\n\n    if (!activeQuery) {\n      this._handleErrorEvent(msg)\n      return\n    }\n\n    this.activeQuery = null\n    activeQuery.handleError(msg, this.connection)\n  }\n\n  _handleRowDescription(msg) {\n    // delegate rowDescription to active query\n    this.activeQuery.handleRowDescription(msg)\n  }\n\n  _handleDataRow(msg) {\n    // delegate dataRow to active query\n    this.activeQuery.handleDataRow(msg)\n  }\n\n  _handlePortalSuspended(msg) {\n    // delegate portalSuspended to active query\n    this.activeQuery.handlePortalSuspended(this.connection)\n  }\n\n  _handleEmptyQuery(msg) {\n    // delegate emptyQuery to active query\n    this.activeQuery.handleEmptyQuery(this.connection)\n  }\n\n  _handleCommandComplete(msg) {\n    // delegate commandComplete to active query\n    this.activeQuery.handleCommandComplete(msg, this.connection)\n  }\n\n  _handleParseComplete(msg) {\n    // if a prepared statement has a name and properly parses\n    // we track that its already been executed so we don't parse\n    // it again on the same client\n    if (this.activeQuery.name) {\n      this.connection.parsedStatements[this.activeQuery.name] = this.activeQuery.text\n    }\n  }\n\n  _handleCopyInResponse(msg) {\n    this.activeQuery.handleCopyInResponse(this.connection)\n  }\n\n  _handleCopyData(msg) {\n    this.activeQuery.handleCopyData(msg, this.connection)\n  }\n\n  _handleNotification(msg) {\n    this.emit('notification', msg)\n  }\n\n  _handleNotice(msg) {\n    this.emit('notice', msg)\n  }\n\n  getStartupConf() {\n    var params = this.connectionParameters\n\n    var data = {\n      user: params.user,\n      database: params.database,\n    }\n\n    var appName = params.application_name || params.fallback_application_name\n    if (appName) {\n      data.application_name = appName\n    }\n    if (params.replication) {\n      data.replication = '' + params.replication\n    }\n    if (params.statement_timeout) {\n      data.statement_timeout = String(parseInt(params.statement_timeout, 10))\n    }\n    if (params.idle_in_transaction_session_timeout) {\n      data.idle_in_transaction_session_timeout = String(parseInt(params.idle_in_transaction_session_timeout, 10))\n    }\n    if (params.options) {\n      data.options = params.options\n    }\n\n    return data\n  }\n\n  cancel(client, query) {\n    if (client.activeQuery === query) {\n      var con = this.connection\n\n      if (this.host && this.host.indexOf('/') === 0) {\n        con.connect(this.host + '/.s.PGSQL.' + this.port)\n      } else {\n        con.connect(this.port, this.host)\n      }\n\n      // once connection is established send cancel message\n      con.on('connect', function () {\n        con.cancel(client.processID, client.secretKey)\n      })\n    } else if (client.queryQueue.indexOf(query) !== -1) {\n      client.queryQueue.splice(client.queryQueue.indexOf(query), 1)\n    }\n  }\n\n  setTypeParser(oid, format, parseFn) {\n    return this._types.setTypeParser(oid, format, parseFn)\n  }\n\n  getTypeParser(oid, format) {\n    return this._types.getTypeParser(oid, format)\n  }\n\n  // Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\n  escapeIdentifier(str) {\n    return '\"' + str.replace(/\"/g, '\"\"') + '\"'\n  }\n\n  // Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\n  escapeLiteral(str) {\n    var hasBackslash = false\n    var escaped = \"'\"\n\n    for (var i = 0; i < str.length; i++) {\n      var c = str[i]\n      if (c === \"'\") {\n        escaped += c + c\n      } else if (c === '\\\\') {\n        escaped += c + c\n        hasBackslash = true\n      } else {\n        escaped += c\n      }\n    }\n\n    escaped += \"'\"\n\n    if (hasBackslash === true) {\n      escaped = ' E' + escaped\n    }\n\n    return escaped\n  }\n\n  _pulseQueryQueue() {\n    if (this.readyForQuery === true) {\n      this.activeQuery = this.queryQueue.shift()\n      if (this.activeQuery) {\n        this.readyForQuery = false\n        this.hasExecuted = true\n\n        const queryError = this.activeQuery.submit(this.connection)\n        if (queryError) {\n          process.nextTick(() => {\n            this.activeQuery.handleError(queryError, this.connection)\n            this.readyForQuery = true\n            this._pulseQueryQueue()\n          })\n        }\n      } else if (this.hasExecuted) {\n        this.activeQuery = null\n        this.emit('drain')\n      }\n    }\n  }\n\n  query(config, values, callback) {\n    // can take in strings, config object or query object\n    var query\n    var result\n    var readTimeout\n    var readTimeoutTimer\n    var queryCallback\n\n    if (config === null || config === undefined) {\n      throw new TypeError('Client was passed a null or undefined query')\n    } else if (typeof config.submit === 'function') {\n      readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n      result = query = config\n      if (typeof values === 'function') {\n        query.callback = query.callback || values\n      }\n    } else {\n      readTimeout = this.connectionParameters.query_timeout\n      query = new Query(config, values, callback)\n      if (!query.callback) {\n        result = new this._Promise((resolve, reject) => {\n          query.callback = (err, res) => (err ? reject(err) : resolve(res))\n        })\n      }\n    }\n\n    if (readTimeout) {\n      queryCallback = query.callback\n\n      readTimeoutTimer = setTimeout(() => {\n        var error = new Error('Query read timeout')\n\n        process.nextTick(() => {\n          query.handleError(error, this.connection)\n        })\n\n        queryCallback(error)\n\n        // we already returned an error,\n        // just do nothing if query completes\n        query.callback = () => {}\n\n        // Remove from queue\n        var index = this.queryQueue.indexOf(query)\n        if (index > -1) {\n          this.queryQueue.splice(index, 1)\n        }\n\n        this._pulseQueryQueue()\n      }, readTimeout)\n\n      query.callback = (err, res) => {\n        clearTimeout(readTimeoutTimer)\n        queryCallback(err, res)\n      }\n    }\n\n    if (this.binary && !query.binary) {\n      query.binary = true\n    }\n\n    if (query._result && !query._result._types) {\n      query._result._types = this._types\n    }\n\n    if (!this._queryable) {\n      process.nextTick(() => {\n        query.handleError(new Error('Client has encountered a connection error and is not queryable'), this.connection)\n      })\n      return result\n    }\n\n    if (this._ending) {\n      process.nextTick(() => {\n        query.handleError(new Error('Client was closed and is not queryable'), this.connection)\n      })\n      return result\n    }\n\n    this.queryQueue.push(query)\n    this._pulseQueryQueue()\n    return result\n  }\n\n  ref() {\n    this.connection.ref()\n  }\n\n  unref() {\n    this.connection.unref()\n  }\n\n  end(cb) {\n    this._ending = true\n\n    // if we have never connected, then end is a noop, callback immediately\n    if (!this.connection._connecting) {\n      if (cb) {\n        cb()\n      } else {\n        return this._Promise.resolve()\n      }\n    }\n\n    if (this.activeQuery || !this._queryable) {\n      // if we have an active query we need to force a disconnect\n      // on the socket - otherwise a hung query could block end forever\n      this.connection.stream.destroy()\n    } else {\n      this.connection.end()\n    }\n\n    if (cb) {\n      this.connection.once('end', cb)\n    } else {\n      return new this._Promise((resolve) => {\n        this.connection.once('end', resolve)\n      })\n    }\n  }\n}\n\n// expose a Query constructor\nClient.Query = Query\n\nmodule.exports = Client\n", "'use strict'\nconst EventEmitter = require('events').EventEmitter\n\nconst NOOP = function () {}\n\nconst removeWhere = (list, predicate) => {\n  const i = list.findIndex(predicate)\n\n  return i === -1 ? undefined : list.splice(i, 1)[0]\n}\n\nclass IdleItem {\n  constructor(client, idleListener, timeoutId) {\n    this.client = client\n    this.idleListener = idleListener\n    this.timeoutId = timeoutId\n  }\n}\n\nclass PendingItem {\n  constructor(callback) {\n    this.callback = callback\n  }\n}\n\nfunction throwOnDoubleRelease() {\n  throw new Error('Release called on client which has already been released to the pool.')\n}\n\nfunction promisify(Promise, callback) {\n  if (callback) {\n    return { callback: callback, result: undefined }\n  }\n  let rej\n  let res\n  const cb = function (err, client) {\n    err ? rej(err) : res(client)\n  }\n  const result = new Promise(function (resolve, reject) {\n    res = resolve\n    rej = reject\n  })\n  return { callback: cb, result: result }\n}\n\nfunction makeIdleListener(pool, client) {\n  return function idleListener(err) {\n    err.client = client\n\n    client.removeListener('error', idleListener)\n    client.on('error', () => {\n      pool.log('additional client error after disconnection due to error', err)\n    })\n    pool._remove(client)\n    // TODO - document that once the pool emits an error\n    // the client has already been closed & purged and is unusable\n    pool.emit('error', err, client)\n  }\n}\n\nclass Pool extends EventEmitter {\n  constructor(options, Client) {\n    super()\n    this.options = Object.assign({}, options)\n\n    if (options != null && 'password' in options) {\n      // \"hiding\" the password so it doesn't show up in stack traces\n      // or if the client is console.logged\n      Object.defineProperty(this.options, 'password', {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: options.password,\n      })\n    }\n    if (options != null && options.ssl && options.ssl.key) {\n      // \"hiding\" the ssl->key so it doesn't show up in stack traces\n      // or if the client is console.logged\n      Object.defineProperty(this.options.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this.options.max = this.options.max || this.options.poolSize || 10\n    this.options.maxUses = this.options.maxUses || Infinity\n    this.options.allowExitOnIdle = this.options.allowExitOnIdle || false\n    this.log = this.options.log || function () {}\n    this.Client = this.options.Client || Client || require('pg').Client\n    this.Promise = this.options.Promise || global.Promise\n\n    if (typeof this.options.idleTimeoutMillis === 'undefined') {\n      this.options.idleTimeoutMillis = 10000\n    }\n\n    this._clients = []\n    this._idle = []\n    this._pendingQueue = []\n    this._endCallback = undefined\n    this.ending = false\n    this.ended = false\n  }\n\n  _isFull() {\n    return this._clients.length >= this.options.max\n  }\n\n  _pulseQueue() {\n    this.log('pulse queue')\n    if (this.ended) {\n      this.log('pulse queue ended')\n      return\n    }\n    if (this.ending) {\n      this.log('pulse queue on ending')\n      if (this._idle.length) {\n        this._idle.slice().map((item) => {\n          this._remove(item.client)\n        })\n      }\n      if (!this._clients.length) {\n        this.ended = true\n        this._endCallback()\n      }\n      return\n    }\n    // if we don't have any waiting, do nothing\n    if (!this._pendingQueue.length) {\n      this.log('no queued requests')\n      return\n    }\n    // if we don't have any idle clients and we have no more room do nothing\n    if (!this._idle.length && this._isFull()) {\n      return\n    }\n    const pendingItem = this._pendingQueue.shift()\n    if (this._idle.length) {\n      const idleItem = this._idle.pop()\n      clearTimeout(idleItem.timeoutId)\n      const client = idleItem.client\n      client.ref && client.ref()\n      const idleListener = idleItem.idleListener\n\n      return this._acquireClient(client, pendingItem, idleListener, false)\n    }\n    if (!this._isFull()) {\n      return this.newClient(pendingItem)\n    }\n    throw new Error('unexpected condition')\n  }\n\n  _remove(client) {\n    const removed = removeWhere(this._idle, (item) => item.client === client)\n\n    if (removed !== undefined) {\n      clearTimeout(removed.timeoutId)\n    }\n\n    this._clients = this._clients.filter((c) => c !== client)\n    client.end()\n    this.emit('remove', client)\n  }\n\n  connect(cb) {\n    if (this.ending) {\n      const err = new Error('Cannot use a pool after calling end on the pool')\n      return cb ? cb(err) : this.Promise.reject(err)\n    }\n\n    const response = promisify(this.Promise, cb)\n    const result = response.result\n\n    // if we don't have to connect a new client, don't do so\n    if (this._isFull() || this._idle.length) {\n      // if we have idle clients schedule a pulse immediately\n      if (this._idle.length) {\n        process.nextTick(() => this._pulseQueue())\n      }\n\n      if (!this.options.connectionTimeoutMillis) {\n        this._pendingQueue.push(new PendingItem(response.callback))\n        return result\n      }\n\n      const queueCallback = (err, res, done) => {\n        clearTimeout(tid)\n        response.callback(err, res, done)\n      }\n\n      const pendingItem = new PendingItem(queueCallback)\n\n      // set connection timeout on checking out an existing client\n      const tid = setTimeout(() => {\n        // remove the callback from pending waiters because\n        // we're going to call it with a timeout error\n        removeWhere(this._pendingQueue, (i) => i.callback === queueCallback)\n        pendingItem.timedOut = true\n        response.callback(new Error('timeout exceeded when trying to connect'))\n      }, this.options.connectionTimeoutMillis)\n\n      this._pendingQueue.push(pendingItem)\n      return result\n    }\n\n    this.newClient(new PendingItem(response.callback))\n\n    return result\n  }\n\n  newClient(pendingItem) {\n    const client = new this.Client(this.options)\n    this._clients.push(client)\n    const idleListener = makeIdleListener(this, client)\n\n    this.log('checking client timeout')\n\n    // connection timeout logic\n    let tid\n    let timeoutHit = false\n    if (this.options.connectionTimeoutMillis) {\n      tid = setTimeout(() => {\n        this.log('ending client due to timeout')\n        timeoutHit = true\n        // force kill the node driver, and let libpq do its teardown\n        client.connection ? client.connection.stream.destroy() : client.end()\n      }, this.options.connectionTimeoutMillis)\n    }\n\n    this.log('connecting new client')\n    client.connect((err) => {\n      if (tid) {\n        clearTimeout(tid)\n      }\n      client.on('error', idleListener)\n      if (err) {\n        this.log('client failed to connect', err)\n        // remove the dead client from our list of clients\n        this._clients = this._clients.filter((c) => c !== client)\n        if (timeoutHit) {\n          err.message = 'Connection terminated due to connection timeout'\n        }\n\n        // this client won\u2019t be released, so move on immediately\n        this._pulseQueue()\n\n        if (!pendingItem.timedOut) {\n          pendingItem.callback(err, undefined, NOOP)\n        }\n      } else {\n        this.log('new client connected')\n\n        return this._acquireClient(client, pendingItem, idleListener, true)\n      }\n    })\n  }\n\n  // acquire a client for a pending work item\n  _acquireClient(client, pendingItem, idleListener, isNew) {\n    if (isNew) {\n      this.emit('connect', client)\n    }\n\n    this.emit('acquire', client)\n\n    client.release = this._releaseOnce(client, idleListener)\n\n    client.removeListener('error', idleListener)\n\n    if (!pendingItem.timedOut) {\n      if (isNew && this.options.verify) {\n        this.options.verify(client, (err) => {\n          if (err) {\n            client.release(err)\n            return pendingItem.callback(err, undefined, NOOP)\n          }\n\n          pendingItem.callback(undefined, client, client.release)\n        })\n      } else {\n        pendingItem.callback(undefined, client, client.release)\n      }\n    } else {\n      if (isNew && this.options.verify) {\n        this.options.verify(client, client.release)\n      } else {\n        client.release()\n      }\n    }\n  }\n\n  // returns a function that wraps _release and throws if called more than once\n  _releaseOnce(client, idleListener) {\n    let released = false\n\n    return (err) => {\n      if (released) {\n        throwOnDoubleRelease()\n      }\n\n      released = true\n      this._release(client, idleListener, err)\n    }\n  }\n\n  // release a client back to the poll, include an error\n  // to remove it from the pool\n  _release(client, idleListener, err) {\n    client.on('error', idleListener)\n\n    client._poolUseCount = (client._poolUseCount || 0) + 1\n\n    // TODO(bmc): expose a proper, public interface _queryable and _ending\n    if (err || this.ending || !client._queryable || client._ending || client._poolUseCount >= this.options.maxUses) {\n      if (client._poolUseCount >= this.options.maxUses) {\n        this.log('remove expended client')\n      }\n      this._remove(client)\n      this._pulseQueue()\n      return\n    }\n\n    // idle timeout\n    let tid\n    if (this.options.idleTimeoutMillis) {\n      tid = setTimeout(() => {\n        this.log('remove idle client')\n        this._remove(client)\n      }, this.options.idleTimeoutMillis)\n\n      if (this.options.allowExitOnIdle) {\n        // allow Node to exit if this is all that's left\n        tid.unref()\n      }\n    }\n\n    if (this.options.allowExitOnIdle) {\n      client.unref()\n    }\n\n    this._idle.push(new IdleItem(client, idleListener, tid))\n    this._pulseQueue()\n  }\n\n  query(text, values, cb) {\n    // guard clause against passing a function as the first parameter\n    if (typeof text === 'function') {\n      const response = promisify(this.Promise, text)\n      setImmediate(function () {\n        return response.callback(new Error('Passing a function as the first parameter to pool.query is not supported'))\n      })\n      return response.result\n    }\n\n    // allow plain text query without values\n    if (typeof values === 'function') {\n      cb = values\n      values = undefined\n    }\n    const response = promisify(this.Promise, cb)\n    cb = response.callback\n\n    this.connect((err, client) => {\n      if (err) {\n        return cb(err)\n      }\n\n      let clientReleased = false\n      const onError = (err) => {\n        if (clientReleased) {\n          return\n        }\n        clientReleased = true\n        client.release(err)\n        cb(err)\n      }\n\n      client.once('error', onError)\n      this.log('dispatching query')\n      client.query(text, values, (err, res) => {\n        this.log('query dispatched')\n        client.removeListener('error', onError)\n        if (clientReleased) {\n          return\n        }\n        clientReleased = true\n        client.release(err)\n        if (err) {\n          return cb(err)\n        } else {\n          return cb(undefined, res)\n        }\n      })\n    })\n    return response.result\n  }\n\n  end(cb) {\n    this.log('ending')\n    if (this.ending) {\n      const err = new Error('Called end on pool more than once')\n      return cb ? cb(err) : this.Promise.reject(err)\n    }\n    this.ending = true\n    const promised = promisify(this.Promise, cb)\n    this._endCallback = promised.callback\n    this._pulseQueue()\n    return promised.result\n  }\n\n  get waitingCount() {\n    return this._pendingQueue.length\n  }\n\n  get idleCount() {\n    return this._idle.length\n  }\n\n  get totalCount() {\n    return this._clients.length\n  }\n}\nmodule.exports = Pool\n", "\n/**\n * Module dependencies.\n */\n\nvar sep = require('path').sep || '/';\n\n/**\n * Module exports.\n */\n\nmodule.exports = fileUriToPath;\n\n/**\n * File URI to Path function.\n *\n * @param {String} uri\n * @return {String} path\n * @api public\n */\n\nfunction fileUriToPath (uri) {\n  if ('string' != typeof uri ||\n      uri.length <= 7 ||\n      'file://' != uri.substring(0, 7)) {\n    throw new TypeError('must pass in a file:// URI to convert to a file path');\n  }\n\n  var rest = decodeURI(uri.substring(7));\n  var firstSlash = rest.indexOf('/');\n  var host = rest.substring(0, firstSlash);\n  var path = rest.substring(firstSlash + 1);\n\n  // 2.  Scheme Definition\n  // As a special case, <host> can be the string \"localhost\" or the empty\n  // string; this is interpreted as \"the machine from which the URL is\n  // being interpreted\".\n  if ('localhost' == host) host = '';\n\n  if (host) {\n    host = sep + sep + host;\n  }\n\n  // 3.2  Drives, drive letters, mount points, file system root\n  // Drive letters are mapped into the top of a file URI in various ways,\n  // depending on the implementation; some applications substitute\n  // vertical bar (\"|\") for the colon after the drive letter, yielding\n  // \"file:///c|/tmp/test.txt\".  In some cases, the colon is left\n  // unchanged, as in \"file:///c:/tmp/test.txt\".  In other cases, the\n  // colon is simply omitted, as in \"file:///c/tmp/test.txt\".\n  path = path.replace(/^(.+)\\|/, '$1:');\n\n  // for Windows, we need to invert the path separators from what a URI uses\n  if (sep == '\\\\') {\n    path = path.replace(/\\//g, '\\\\');\n  }\n\n  if (/^.+\\:/.test(path)) {\n    // has Windows drive at beginning of path\n  } else {\n    // unix path\u2026\n    path = sep + path;\n  }\n\n  return host + path;\n}\n", "/**\n * Module dependencies.\n */\n\nvar fs = require('fs'),\n  path = require('path'),\n  fileURLToPath = require('file-uri-to-path'),\n  join = path.join,\n  dirname = path.dirname,\n  exists =\n    (fs.accessSync &&\n      function(path) {\n        try {\n          fs.accessSync(path);\n        } catch (e) {\n          return false;\n        }\n        return true;\n      }) ||\n    fs.existsSync ||\n    path.existsSync,\n  defaults = {\n    arrow: process.env.NODE_BINDINGS_ARROW || ' \u2192 ',\n    compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled',\n    platform: process.platform,\n    arch: process.arch,\n    nodePreGyp:\n      'node-v' +\n      process.versions.modules +\n      '-' +\n      process.platform +\n      '-' +\n      process.arch,\n    version: process.versions.node,\n    bindings: 'bindings.node',\n    try: [\n      // node-gyp's linked version in the \"build\" dir\n      ['module_root', 'build', 'bindings'],\n      // node-waf and gyp_addon (a.k.a node-gyp)\n      ['module_root', 'build', 'Debug', 'bindings'],\n      ['module_root', 'build', 'Release', 'bindings'],\n      // Debug files, for development (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Debug', 'bindings'],\n      ['module_root', 'Debug', 'bindings'],\n      // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Release', 'bindings'],\n      ['module_root', 'Release', 'bindings'],\n      // Legacy from node-waf, node <= 0.4.x\n      ['module_root', 'build', 'default', 'bindings'],\n      // Production \"Release\" buildtype binary (meh...)\n      ['module_root', 'compiled', 'version', 'platform', 'arch', 'bindings'],\n      // node-qbs builds\n      ['module_root', 'addon-build', 'release', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'debug', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'default', 'install-root', 'bindings'],\n      // node-pre-gyp path ./lib/binding/{node_abi}-{platform}-{arch}\n      ['module_root', 'lib', 'binding', 'nodePreGyp', 'bindings']\n    ]\n  };\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings(opts) {\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts };\n  } else if (!opts) {\n    opts = {};\n  }\n\n  // maps `defaults` onto `opts` object\n  Object.keys(defaults).map(function(i) {\n    if (!(i in opts)) opts[i] = defaults[i];\n  });\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName());\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node';\n  }\n\n  // https://github.com/webpack/webpack/issues/4175#issuecomment-342931035\n  var requireFunc =\n    typeof __webpack_require__ === 'function'\n      ? __non_webpack_require__\n      : require;\n\n  var tries = [],\n    i = 0,\n    l = opts.try.length,\n    n,\n    b,\n    err;\n\n  for (; i < l; i++) {\n    n = join.apply(\n      null,\n      opts.try[i].map(function(p) {\n        return opts[p] || p;\n      })\n    );\n    tries.push(n);\n    try {\n      b = opts.path ? requireFunc.resolve(n) : requireFunc(n);\n      if (!opts.path) {\n        b.path = n;\n      }\n      return b;\n    } catch (e) {\n      if (e.code !== 'MODULE_NOT_FOUND' &&\n          e.code !== 'QUALIFIED_PATH_RESOLUTION_FAILED' &&\n          !/not find/i.test(e.message)) {\n        throw e;\n      }\n    }\n  }\n\n  err = new Error(\n    'Could not locate the bindings file. Tried:\\n' +\n      tries\n        .map(function(a) {\n          return opts.arrow + a;\n        })\n        .join('\\n')\n  );\n  err.tries = tries;\n  throw err;\n}\nmodule.exports = exports = bindings;\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName(calling_file) {\n  var origPST = Error.prepareStackTrace,\n    origSTL = Error.stackTraceLimit,\n    dummy = {},\n    fileName;\n\n  Error.stackTraceLimit = 10;\n\n  Error.prepareStackTrace = function(e, st) {\n    for (var i = 0, l = st.length; i < l; i++) {\n      fileName = st[i].getFileName();\n      if (fileName !== __filename) {\n        if (calling_file) {\n          if (fileName !== calling_file) {\n            return;\n          }\n        } else {\n          return;\n        }\n      }\n    }\n  };\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy);\n  dummy.stack;\n\n  // cleanup\n  Error.prepareStackTrace = origPST;\n  Error.stackTraceLimit = origSTL;\n\n  // handle filename that starts with \"file://\"\n  var fileSchema = 'file://';\n  if (fileName.indexOf(fileSchema) === 0) {\n    fileName = fileURLToPath(fileName);\n  }\n\n  return fileName;\n};\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot(file) {\n  var dir = dirname(file),\n    prev;\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd();\n    }\n    if (\n      exists(join(dir, 'package.json')) ||\n      exists(join(dir, 'node_modules'))\n    ) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir;\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error(\n        'Could not find module root given file: \"' +\n          file +\n          '\". Do you have a `package.json` file? '\n      );\n    }\n    // Try the parent dir next\n    prev = dir;\n    dir = join(dir, '..');\n  }\n};\n", "var PQ = module.exports = require('bindings')('addon.node').PQ;\n\n//print out the include dir\n//if you want to include this in a binding.gyp file\nif(!module.parent) {\n  var path = require('path');\n  console.log(path.normalize(__dirname + '/src'));\n}\n\nvar EventEmitter = require('events').EventEmitter;\nvar assert = require('assert');\n\nfor(var key in EventEmitter.prototype) {\n  PQ.prototype[key] = EventEmitter.prototype[key];\n}\n\n//SYNC connects to the server\n//throws an exception in the event of a connection error\nPQ.prototype.connectSync = function(paramString) {\n  this.connected = true;\n  if(!paramString) {\n    paramString = '';\n  }\n  var connected = this.$connectSync(paramString);\n  if(!connected) {\n    var err = new Error(this.errorMessage());\n    this.finish();\n    throw err;\n  }\n};\n\n//connects async using a background thread\n//calls the callback with an error if there was one\nPQ.prototype.connect = function(paramString, cb) {\n  this.connected = true;\n  if(typeof paramString == 'function') {\n    cb = paramString;\n    paramString = '';\n  }\n  if(!paramString) {\n    paramString = '';\n  }\n  assert(cb, 'Must provide a connection callback');\n  if(process.domain) {\n    cb = process.domain.bind(cb);\n  }\n  this.$connect(paramString, cb);\n};\n\nPQ.prototype.errorMessage = function() {\n  return this.$getLastErrorMessage();\n};\n\n//returns an int for the fd of the socket\nPQ.prototype.socket = function() {\n  return this.$socket();\n};\n\n// return server version number e.g. 90300\nPQ.prototype.serverVersion = function () {\n  return this.$serverVersion();\n};\n\n//finishes the connection & closes it\nPQ.prototype.finish = function() {\n  this.connected = false;\n  this.$finish();\n};\n\n////SYNC executes a plain text query\n//immediately stores the results within the PQ object for consumption with\n//ntuples, getvalue, etc...\n//returns false if there was an error\n//consume additional error details via PQ#errorMessage & friends\nPQ.prototype.exec = function(commandText) {\n  if(!commandText) {\n    commandText = '';\n  }\n  this.$exec(commandText);\n};\n\n//SYNC executes a query with parameters\n//immediately stores the results within the PQ object for consumption with\n//ntuples, getvalue, etc...\n//returns false if there was an error\n//consume additional error details via PQ#errorMessage & friends\nPQ.prototype.execParams = function(commandText, parameters) {\n  if(!commandText) {\n    commandText = '';\n  }\n  if(!parameters) {\n    parameters = [];\n  }\n  this.$execParams(commandText, parameters);\n};\n\n//SYNC prepares a named query and stores the result\n//immediately stores the results within the PQ object for consumption with\n//ntuples, getvalue, etc...\n//returns false if there was an error\n//consume additional error details via PQ#errorMessage & friends\nPQ.prototype.prepare = function(statementName, commandText, nParams) {\n  assert.equal(arguments.length, 3, 'Must supply 3 arguments');\n  if(!statementName) {\n    statementName = '';\n  }\n  if(!commandText) {\n    commandText = '';\n  }\n  nParams = Number(nParams) || 0;\n  this.$prepare(statementName, commandText, nParams);\n};\n\n//SYNC executes a named, prepared query and stores the result\n//immediately stores the results within the PQ object for consumption with\n//ntuples, getvalue, etc...\n//returns false if there was an error\n//consume additional error details via PQ#errorMessage & friends\nPQ.prototype.execPrepared = function(statementName, parameters) {\n  if(!statementName) {\n    statementName = '';\n  }\n  if(!parameters) {\n    parameters = [];\n  }\n  this.$execPrepared(statementName, parameters);\n};\n\n//send a command to begin executing a query in async mode\n//returns true if sent, or false if there was a send failure\nPQ.prototype.sendQuery = function(commandText) {\n  if(!commandText) {\n    commandText = '';\n  }\n  return this.$sendQuery(commandText);\n};\n\n//send a command to begin executing a query with parameters in async mode\n//returns true if sent, or false if there was a send failure\nPQ.prototype.sendQueryParams = function(commandText, parameters) {\n  if(!commandText) {\n    commandText = '';\n  }\n  if(!parameters) {\n    parameters = [];\n  }\n  return this.$sendQueryParams(commandText, parameters);\n};\n\n//send a command to prepare a named query in async mode\n//returns true if sent, or false if there was a send failure\nPQ.prototype.sendPrepare = function(statementName, commandText, nParams) {\n  assert.equal(arguments.length, 3, 'Must supply 3 arguments');\n  if(!statementName) {\n    statementName = '';\n  }\n  if(!commandText) {\n    commandText = '';\n  }\n  nParams = Number(nParams) || 0;\n  return this.$sendPrepare(statementName, commandText, nParams);\n};\n\n//send a command to execute a named query in async mode\n//returns true if sent, or false if there was a send failure\nPQ.prototype.sendQueryPrepared = function(statementName, parameters) {\n  if(!statementName) {\n    statementName = '';\n  }\n  if(!parameters) {\n    parameters = [];\n  }\n  return this.$sendQueryPrepared(statementName, parameters);\n};\n\n//'pops' a result out of the buffered\n//response data read during async command execution\n//and stores it on the c/c++ object so you can consume\n//the data from it.  returns true if there was a pending result\n//or false if there was no pending result. if there was no pending result\n//the last found result is not overwritten so you can call getResult as many\n//times as you want, and you'll always have the last available result for consumption\nPQ.prototype.getResult = function() {\n  return this.$getResult();\n};\n\n//returns a text of the enum associated with the result\n//usually just PGRES_COMMAND_OK or PGRES_FATAL_ERROR\nPQ.prototype.resultStatus = function() {\n  return this.$resultStatus();\n};\n\nPQ.prototype.resultErrorMessage = function() {\n  return this.$resultErrorMessage();\n};\n\nPQ.prototype.resultErrorFields = function() {\n  return this.$resultErrorFields();\n};\n\n//free the memory associated with a result\n//this is somewhat handled for you within the c/c++ code\n//by never allowing the code to 'leak' a result. still,\n//if you absolutely want to free it yourself, you can use this.\nPQ.prototype.clear = function() {\n  this.$clear();\n};\n\n//returns the number of tuples (rows) in the result set\nPQ.prototype.ntuples = function() {\n  return this.$ntuples();\n};\n\n//returns the number of fields (columns) in the result set\nPQ.prototype.nfields = function() {\n  return this.$nfields();\n};\n\n//returns the name of the field (column) at the given offset\nPQ.prototype.fname = function(offset) {\n  return this.$fname(offset);\n};\n\n//returns the Oid of the type for the given field\nPQ.prototype.ftype = function(offset) {\n  return this.$ftype(offset);\n};\n\n//returns a text value at the given row/col\n//if the value is null this still returns empty string\n//so you need to use PQ#getisnull to determine\nPQ.prototype.getvalue = function(row, col) {\n  return this.$getvalue(row, col);\n};\n\n//returns true/false if the value is null\nPQ.prototype.getisnull = function(row, col) {\n  return this.$getisnull(row, col);\n};\n\n//returns the status of the command\nPQ.prototype.cmdStatus = function() {\n  return this.$cmdStatus();\n};\n\n//returns the tuples in the command\nPQ.prototype.cmdTuples = function() {\n  return this.$cmdTuples();\n};\n\n//starts the 'read ready' libuv socket listener.\n//Once the socket becomes readable, the PQ instance starts\n//emitting 'readable' events.  Similar to how node's readable-stream\n//works except to clear the SELECT() notification you need to call\n//PQ#consumeInput instead of letting node pull the data off the socket\n//http://www.postgresql.org/docs/9.1/static/libpq-async.html\nPQ.prototype.startReader = function() {\n  assert(this.connected, 'Must be connected to start reader');\n  this.$startRead();\n};\n\n//suspends the libuv socket 'read ready' listener\nPQ.prototype.stopReader = function() {\n  this.$stopRead();\n};\n\nPQ.prototype.writable = function(cb) {\n  assert(this.connected, 'Must be connected to start writer');\n  this.$startWrite();\n  return this.once('writable', cb);\n};\n\n//returns boolean - false indicates an error condition\n//e.g. a failure to consume input\nPQ.prototype.consumeInput = function() {\n  return this.$consumeInput();\n};\n\n//returns true if PQ#getResult would cause\n//the process to block waiting on results\n//false indicates PQ#getResult can be called\n//with an assurance of not blocking\nPQ.prototype.isBusy = function() {\n  return this.$isBusy();\n};\n\n//toggles the socket blocking on outgoing writes\nPQ.prototype.setNonBlocking = function(truthy) {\n  return this.$setNonBlocking(truthy ? 1 : 0);\n};\n\n//returns true if the connection is non-blocking on writes, otherwise false\n//note: connection is always non-blocking on reads if using the send* methods\nPQ.prototype.isNonBlocking = function() {\n  return this.$isNonBlocking();\n};\n\n//returns 1 if socket is not write-ready\n//returns 0 if all data flushed to socket\n//returns -1 if there is an error\nPQ.prototype.flush = function() {\n  return this.$flush();\n};\n\n//escapes a literal and returns the escaped string\n//I'm not 100% sure this doesn't do any I/O...need to check that\nPQ.prototype.escapeLiteral = function(input) {\n  if(!input) return input;\n  return this.$escapeLiteral(input);\n};\n\nPQ.prototype.escapeIdentifier = function(input) {\n  if(!input) return input;\n  return this.$escapeIdentifier(input);\n};\n\n//Checks for any notifications which may have arrivied\n//and returns them as a javascript object: {relname: 'string', extra: 'string', be_pid: int}\n//if there are no pending notifications this returns undefined\nPQ.prototype.notifies = function() {\n  return this.$notifies();\n};\n\n//Sends a buffer of binary data to the server\n//returns 1 if the command was sent successfully\n//returns 0 if the command would block (use PQ#writable here if so)\n//returns -1 if there was an error\nPQ.prototype.putCopyData = function(buffer) {\n  assert(buffer instanceof Buffer);\n  return this.$putCopyData(buffer);\n};\n\n//Sends a command to 'finish' the copy\n//if an error message is passed, it will be sent to the\n//backend and signal a request to cancel the copy in\n//returns 1 if sent succesfully\n//returns 0 if the command would block\n//returns -1 if there was an error\nPQ.prototype.putCopyEnd = function(errorMessage) {\n  if(errorMessage) {\n    return this.$putCopyEnd(errorMessage);\n  }\n  return this.$putCopyEnd();\n};\n\n//Gets a buffer of data from a copy out command\n//if async is passed as true it will not block waiting\n//for the result, otherwise this will BLOCK for a result.\n//returns a buffer if successful\n//returns 0 if copy is still in process (async only)\n//returns -1 if the copy is done\n//returns -2 if there was an error\nPQ.prototype.getCopyData = function(async) {\n  return this.$getCopyData(!!async);\n};\n\nPQ.prototype.cancel = function() {\n  return this.$cancel();\n};\n", "'use strict'\n\nexports.parse = function (source, transform) {\n  return new ArrayParser(source, transform).parse()\n}\n\nfunction ArrayParser (source, transform) {\n  this.source = source\n  this.transform = transform || identity\n  this.position = 0\n  this.entries = []\n  this.recorded = []\n  this.dimension = 0\n}\n\nArrayParser.prototype.isEof = function () {\n  return this.position >= this.source.length\n}\n\nArrayParser.prototype.nextCharacter = function () {\n  var character = this.source[this.position++]\n  if (character === '\\\\') {\n    return {\n      value: this.source[this.position++],\n      escaped: true\n    }\n  }\n  return {\n    value: character,\n    escaped: false\n  }\n}\n\nArrayParser.prototype.record = function (character) {\n  this.recorded.push(character)\n}\n\nArrayParser.prototype.newEntry = function (includeEmpty) {\n  var entry\n  if (this.recorded.length > 0 || includeEmpty) {\n    entry = this.recorded.join('')\n    if (entry === 'NULL' && !includeEmpty) {\n      entry = null\n    }\n    if (entry !== null) entry = this.transform(entry)\n    this.entries.push(entry)\n    this.recorded = []\n  }\n}\n\nArrayParser.prototype.parse = function (nested) {\n  var character, parser, quote\n  while (!this.isEof()) {\n    character = this.nextCharacter()\n    if (character.value === '{' && !quote) {\n      this.dimension++\n      if (this.dimension > 1) {\n        parser = new ArrayParser(this.source.substr(this.position - 1), this.transform)\n        this.entries.push(parser.parse(true))\n        this.position += parser.position - 2\n      }\n    } else if (character.value === '}' && !quote) {\n      this.dimension--\n      if (!this.dimension) {\n        this.newEntry()\n        if (nested) return this.entries\n      }\n    } else if (character.value === '\"' && !character.escaped) {\n      if (quote) this.newEntry(true)\n      quote = !quote\n    } else if (character.value === ',' && !quote) {\n      this.newEntry()\n    } else {\n      this.record(character.value)\n    }\n  }\n  if (this.dimension !== 0) {\n    throw new Error('array dimension not balanced')\n  }\n  return this.entries\n}\n\nfunction identity (value) {\n  return value\n}\n", "var array = require('postgres-array');\n\nmodule.exports = {\n  create: function (source, transform) {\n    return {\n      parse: function() {\n        return array.parse(source, transform);\n      }\n    };\n  }\n};\n", "var array = require('postgres-array')\nvar arrayParser = require('./arrayParser');\nvar parseDate = require('postgres-date');\nvar parseInterval = require('postgres-interval');\nvar parseByteA = require('postgres-bytea');\n\nfunction allowNull (fn) {\n  return function nullAllowed (value) {\n    if (value === null) return value\n    return fn(value)\n  }\n}\n\nfunction parseBool (value) {\n  if (value === null) return value\n  return value === 'TRUE' ||\n    value === 't' ||\n    value === 'true' ||\n    value === 'y' ||\n    value === 'yes' ||\n    value === 'on' ||\n    value === '1';\n}\n\nfunction parseBoolArray (value) {\n  if (!value) return null\n  return array.parse(value, parseBool)\n}\n\nfunction parseBaseTenInt (string) {\n  return parseInt(string, 10)\n}\n\nfunction parseIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(parseBaseTenInt))\n}\n\nfunction parseBigIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(function (entry) {\n    return parseBigInteger(entry).trim()\n  }))\n}\n\nvar parsePointArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parsePoint(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseFloatArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parseFloat(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseStringArray = function(value) {\n  if(!value) { return null; }\n\n  var p = arrayParser.create(value);\n  return p.parse();\n};\n\nvar parseDateArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseDate(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseByteAArray = function(value) {\n  if (!value) { return null; }\n\n  return array.parse(value, allowNull(parseByteA));\n};\n\nvar parseInteger = function(value) {\n  return parseInt(value, 10);\n};\n\nvar parseBigInteger = function(value) {\n  var valStr = String(value);\n  if (/^\\d+$/.test(valStr)) { return valStr; }\n  return value;\n};\n\nvar parseJsonArray = function(value) {\n  var arr = parseStringArray(value);\n\n  if (!arr) {\n    return arr;\n  }\n\n  return arr.map(function(el) { return JSON.parse(el); });\n};\n\nvar parsePoint = function(value) {\n  if (value[0] !== '(') { return null; }\n\n  value = value.substring( 1, value.length - 1 ).split(',');\n\n  return {\n    x: parseFloat(value[0])\n  , y: parseFloat(value[1])\n  };\n};\n\nvar parseCircle = function(value) {\n  if (value[0] !== '<' && value[1] !== '(') { return null; }\n\n  var point = '(';\n  var radius = '';\n  var pointParsed = false;\n  for (var i = 2; i < value.length - 1; i++){\n    if (!pointParsed) {\n      point += value[i];\n    }\n\n    if (value[i] === ')') {\n      pointParsed = true;\n      continue;\n    } else if (!pointParsed) {\n      continue;\n    }\n\n    if (value[i] === ','){\n      continue;\n    }\n\n    radius += value[i];\n  }\n  var result = parsePoint(point);\n  result.radius = parseFloat(radius);\n\n  return result;\n};\n\nvar init = function(register) {\n  register(20, parseBigInteger); // int8\n  register(21, parseInteger); // int2\n  register(23, parseInteger); // int4\n  register(26, parseInteger); // oid\n  register(700, parseFloat); // float4/real\n  register(701, parseFloat); // float8/double\n  register(16, parseBool);\n  register(1082, parseDate); // date\n  register(1114, parseDate); // timestamp without timezone\n  register(1184, parseDate); // timestamp\n  register(600, parsePoint); // point\n  register(651, parseStringArray); // cidr[]\n  register(718, parseCircle); // circle\n  register(1000, parseBoolArray);\n  register(1001, parseByteAArray);\n  register(1005, parseIntegerArray); // _int2\n  register(1007, parseIntegerArray); // _int4\n  register(1028, parseIntegerArray); // oid[]\n  register(1016, parseBigIntegerArray); // _int8\n  register(1017, parsePointArray); // point[]\n  register(1021, parseFloatArray); // _float4\n  register(1022, parseFloatArray); // _float8\n  register(1231, parseFloatArray); // _numeric\n  register(1014, parseStringArray); //char\n  register(1015, parseStringArray); //varchar\n  register(1008, parseStringArray);\n  register(1009, parseStringArray);\n  register(1040, parseStringArray); // macaddr[]\n  register(1041, parseStringArray); // inet[]\n  register(1115, parseDateArray); // timestamp without time zone[]\n  register(1182, parseDateArray); // _date\n  register(1185, parseDateArray); // timestamp with time zone[]\n  register(1186, parseInterval);\n  register(17, parseByteA);\n  register(114, JSON.parse.bind(JSON)); // json\n  register(3802, JSON.parse.bind(JSON)); // jsonb\n  register(199, parseJsonArray); // json[]\n  register(3807, parseJsonArray); // jsonb[]\n  register(3907, parseStringArray); // numrange[]\n  register(2951, parseStringArray); // uuid[]\n  register(791, parseStringArray); // money[]\n  register(1183, parseStringArray); // time[]\n  register(1270, parseStringArray); // timetz[]\n};\n\nmodule.exports = {\n  init: init\n};\n", "var parseInt64 = require('pg-int8');\n\nvar parseBits = function(data, bits, offset, invert, callback) {\n  offset = offset || 0;\n  invert = invert || false;\n  callback = callback || function(lastValue, newValue, bits) { return (lastValue * Math.pow(2, bits)) + newValue; };\n  var offsetBytes = offset >> 3;\n\n  var inv = function(value) {\n    if (invert) {\n      return ~value & 0xff;\n    }\n\n    return value;\n  };\n\n  // read first (maybe partial) byte\n  var mask = 0xff;\n  var firstBits = 8 - (offset % 8);\n  if (bits < firstBits) {\n    mask = (0xff << (8 - bits)) & 0xff;\n    firstBits = bits;\n  }\n\n  if (offset) {\n    mask = mask >> (offset % 8);\n  }\n\n  var result = 0;\n  if ((offset % 8) + bits >= 8) {\n    result = callback(0, inv(data[offsetBytes]) & mask, firstBits);\n  }\n\n  // read bytes\n  var bytes = (bits + offset) >> 3;\n  for (var i = offsetBytes + 1; i < bytes; i++) {\n    result = callback(result, inv(data[i]), 8);\n  }\n\n  // bits to read, that are not a complete byte\n  var lastBits = (bits + offset) % 8;\n  if (lastBits > 0) {\n    result = callback(result, inv(data[bytes]) >> (8 - lastBits), lastBits);\n  }\n\n  return result;\n};\n\nvar parseFloatFromBits = function(data, precisionBits, exponentBits) {\n  var bias = Math.pow(2, exponentBits - 1) - 1;\n  var sign = parseBits(data, 1);\n  var exponent = parseBits(data, exponentBits, 1);\n\n  if (exponent === 0) {\n    return 0;\n  }\n\n  // parse mantissa\n  var precisionBitsCounter = 1;\n  var parsePrecisionBits = function(lastValue, newValue, bits) {\n    if (lastValue === 0) {\n      lastValue = 1;\n    }\n\n    for (var i = 1; i <= bits; i++) {\n      precisionBitsCounter /= 2;\n      if ((newValue & (0x1 << (bits - i))) > 0) {\n        lastValue += precisionBitsCounter;\n      }\n    }\n\n    return lastValue;\n  };\n\n  var mantissa = parseBits(data, precisionBits, exponentBits + 1, false, parsePrecisionBits);\n\n  // special cases\n  if (exponent == (Math.pow(2, exponentBits + 1) - 1)) {\n    if (mantissa === 0) {\n      return (sign === 0) ? Infinity : -Infinity;\n    }\n\n    return NaN;\n  }\n\n  // normale number\n  return ((sign === 0) ? 1 : -1) * Math.pow(2, exponent - bias) * mantissa;\n};\n\nvar parseInt16 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 15, 1, true) + 1);\n  }\n\n  return parseBits(value, 15, 1);\n};\n\nvar parseInt32 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 31, 1, true) + 1);\n  }\n\n  return parseBits(value, 31, 1);\n};\n\nvar parseFloat32 = function(value) {\n  return parseFloatFromBits(value, 23, 8);\n};\n\nvar parseFloat64 = function(value) {\n  return parseFloatFromBits(value, 52, 11);\n};\n\nvar parseNumeric = function(value) {\n  var sign = parseBits(value, 16, 32);\n  if (sign == 0xc000) {\n    return NaN;\n  }\n\n  var weight = Math.pow(10000, parseBits(value, 16, 16));\n  var result = 0;\n\n  var digits = [];\n  var ndigits = parseBits(value, 16);\n  for (var i = 0; i < ndigits; i++) {\n    result += parseBits(value, 16, 64 + (16 * i)) * weight;\n    weight /= 10000;\n  }\n\n  var scale = Math.pow(10, parseBits(value, 16, 48));\n  return ((sign === 0) ? 1 : -1) * Math.round(result * scale) / scale;\n};\n\nvar parseDate = function(isUTC, value) {\n  var sign = parseBits(value, 1);\n  var rawValue = parseBits(value, 63, 1);\n\n  // discard usecs and shift from 2000 to 1970\n  var result = new Date((((sign === 0) ? 1 : -1) * rawValue / 1000) + 946684800000);\n\n  if (!isUTC) {\n    result.setTime(result.getTime() + result.getTimezoneOffset() * 60000);\n  }\n\n  // add microseconds to the date\n  result.usec = rawValue % 1000;\n  result.getMicroSeconds = function() {\n    return this.usec;\n  };\n  result.setMicroSeconds = function(value) {\n    this.usec = value;\n  };\n  result.getUTCMicroSeconds = function() {\n    return this.usec;\n  };\n\n  return result;\n};\n\nvar parseArray = function(value) {\n  var dim = parseBits(value, 32);\n\n  var flags = parseBits(value, 32, 32);\n  var elementType = parseBits(value, 32, 64);\n\n  var offset = 96;\n  var dims = [];\n  for (var i = 0; i < dim; i++) {\n    // parse dimension\n    dims[i] = parseBits(value, 32, offset);\n    offset += 32;\n\n    // ignore lower bounds\n    offset += 32;\n  }\n\n  var parseElement = function(elementType) {\n    // parse content length\n    var length = parseBits(value, 32, offset);\n    offset += 32;\n\n    // parse null values\n    if (length == 0xffffffff) {\n      return null;\n    }\n\n    var result;\n    if ((elementType == 0x17) || (elementType == 0x14)) {\n      // int/bigint\n      result = parseBits(value, length * 8, offset);\n      offset += length * 8;\n      return result;\n    }\n    else if (elementType == 0x19) {\n      // string\n      result = value.toString(this.encoding, offset >> 3, (offset += (length << 3)) >> 3);\n      return result;\n    }\n    else {\n      console.log(\"ERROR: ElementType not implemented: \" + elementType);\n    }\n  };\n\n  var parse = function(dimension, elementType) {\n    var array = [];\n    var i;\n\n    if (dimension.length > 1) {\n      var count = dimension.shift();\n      for (i = 0; i < count; i++) {\n        array[i] = parse(dimension, elementType);\n      }\n      dimension.unshift(count);\n    }\n    else {\n      for (i = 0; i < dimension[0]; i++) {\n        array[i] = parseElement(elementType);\n      }\n    }\n\n    return array;\n  };\n\n  return parse(dims, elementType);\n};\n\nvar parseText = function(value) {\n  return value.toString('utf8');\n};\n\nvar parseBool = function(value) {\n  if(value === null) return null;\n  return (parseBits(value, 8) > 0);\n};\n\nvar init = function(register) {\n  register(20, parseInt64);\n  register(21, parseInt16);\n  register(23, parseInt32);\n  register(26, parseInt32);\n  register(1700, parseNumeric);\n  register(700, parseFloat32);\n  register(701, parseFloat64);\n  register(16, parseBool);\n  register(1114, parseDate.bind(null, false));\n  register(1184, parseDate.bind(null, true));\n  register(1000, parseArray);\n  register(1007, parseArray);\n  register(1016, parseArray);\n  register(1008, parseArray);\n  register(1009, parseArray);\n  register(25, parseText);\n};\n\nmodule.exports = {\n  init: init\n};\n", "var textParsers = require('./lib/textParsers');\nvar binaryParsers = require('./lib/binaryParsers');\nvar arrayParser = require('./lib/arrayParser');\n\nexports.getTypeParser = getTypeParser;\nexports.setTypeParser = setTypeParser;\nexports.arrayParser = arrayParser;\n\nvar typeParsers = {\n  text: {},\n  binary: {}\n};\n\n//the empty parse function\nfunction noParse (val) {\n  return String(val);\n};\n\n//returns a function used to convert a specific type (specified by\n//oid) into a result javascript type\n//note: the oid can be obtained via the following sql query:\n//SELECT oid FROM pg_type WHERE typname = 'TYPE_NAME_HERE';\nfunction getTypeParser (oid, format) {\n  format = format || 'text';\n  if (!typeParsers[format]) {\n    return noParse;\n  }\n  return typeParsers[format][oid] || noParse;\n};\n\nfunction setTypeParser (oid, format, parseFn) {\n  if(typeof format == 'function') {\n    parseFn = format;\n    format = 'text';\n  }\n  typeParsers[format][oid] = parseFn;\n};\n\ntextParsers.init(function(oid, converter) {\n  typeParsers.text[oid] = converter;\n});\n\nbinaryParsers.init(function(oid, converter) {\n  typeParsers.binary[oid] = converter;\n});\n", "'use strict'\n\nclass Result {\n  constructor (types, arrayMode) {\n    this._types = types\n    this._arrayMode = arrayMode\n\n    this.command = undefined\n    this.rowCount = undefined\n    this.fields = []\n    this.rows = []\n  }\n\n  consumeCommand (pq) {\n    this.command = pq.cmdStatus().split(' ')[0]\n    this.rowCount = parseInt(pq.cmdTuples(), 10)\n  }\n\n  consumeFields (pq) {\n    const nfields = pq.nfields()\n    for (var x = 0; x < nfields; x++) {\n      this.fields.push({\n        name: pq.fname(x),\n        dataTypeID: pq.ftype(x)\n      })\n    }\n  }\n\n  consumeRows (pq) {\n    const tupleCount = pq.ntuples()\n    for (var i = 0; i < tupleCount; i++) {\n      const row = this._arrayMode ? this.consumeRowAsArray(pq, i) : this.consumeRowAsObject(pq, i)\n      this.rows.push(row)\n    }\n  }\n\n  consumeRowAsObject (pq, rowIndex) {\n    const row = { }\n    for (var j = 0; j < this.fields.length; j++) {\n      const value = this.readValue(pq, rowIndex, j)\n      row[this.fields[j].name] = value\n    }\n    return row\n  }\n\n  consumeRowAsArray (pq, rowIndex) {\n    const row = []\n    for (var j = 0; j < this.fields.length; j++) {\n      const value = this.readValue(pq, rowIndex, j)\n      row.push(value)\n    }\n    return row\n  }\n\n  readValue (pq, rowIndex, colIndex) {\n    var rawValue = pq.getvalue(rowIndex, colIndex)\n    if (rawValue === '') {\n      if (pq.getisnull(rowIndex, colIndex)) {\n        return null\n      }\n    }\n    const dataTypeId = this.fields[colIndex].dataTypeID\n    return this._types.getTypeParser(dataTypeId)(rawValue)\n  }\n}\n\nfunction buildResult (pq, types, arrayMode) {\n  const result = new Result(types, arrayMode)\n  result.consumeCommand(pq)\n  result.consumeFields(pq)\n  result.consumeRows(pq)\n\n  return result\n}\n\nmodule.exports = buildResult\n", "var Duplex = require('stream').Duplex\nvar Writable = require('stream').Writable\nvar util = require('util')\n\nvar CopyStream = module.exports = function (pq, options) {\n  Duplex.call(this, options)\n  this.pq = pq\n  this._reading = false\n}\n\nutil.inherits(CopyStream, Duplex)\n\n// writer methods\nCopyStream.prototype._write = function (chunk, encoding, cb) {\n  var result = this.pq.putCopyData(chunk)\n\n  // sent successfully\n  if (result === 1) return cb()\n\n  // error\n  if (result === -1) return cb(new Error(this.pq.errorMessage()))\n\n  // command would block. wait for writable and call again.\n  var self = this\n  this.pq.writable(function () {\n    self._write(chunk, encoding, cb)\n  })\n}\n\nCopyStream.prototype.end = function () {\n  var args = Array.prototype.slice.call(arguments, 0)\n  var self = this\n\n  var callback = args.pop()\n\n  if (args.length) {\n    this.write(args[0])\n  }\n  var result = this.pq.putCopyEnd()\n\n  // sent successfully\n  if (result === 1) {\n    // consume our results and then call 'end' on the\n    // \"parent\" writable class so we can emit 'finish' and\n    // all that jazz\n    return consumeResults(this.pq, function (err, res) {\n      Writable.prototype.end.call(self)\n\n      // handle possible passing of callback to end method\n      if (callback) {\n        callback(err)\n      }\n    })\n  }\n\n  // error\n  if (result === -1) {\n    var err = new Error(this.pq.errorMessage())\n    return this.emit('error', err)\n  }\n\n  // command would block. wait for writable and call end again\n  // don't pass any buffers to end on the second call because\n  // we already sent them to possible this.write the first time\n  // we called end\n  return this.pq.writable(function () {\n    return self.end.apply(self, callback)\n  })\n}\n\n// reader methods\nCopyStream.prototype._consumeBuffer = function (cb) {\n  var result = this.pq.getCopyData(true)\n  if (result instanceof Buffer) {\n    return setImmediate(function () {\n      cb(null, result)\n    })\n  }\n  if (result === -1) {\n    // end of stream\n    return cb(null, null)\n  }\n  if (result === 0) {\n    var self = this\n    this.pq.once('readable', function () {\n      self.pq.stopReader()\n      self.pq.consumeInput()\n      self._consumeBuffer(cb)\n    })\n    return this.pq.startReader()\n  }\n  cb(new Error('Unrecognized read status: ' + result))\n}\n\nCopyStream.prototype._read = function (size) {\n  if (this._reading) return\n  this._reading = true\n  // console.log('read begin');\n  var self = this\n  this._consumeBuffer(function (err, buffer) {\n    self._reading = false\n    if (err) {\n      return self.emit('error', err)\n    }\n    if (buffer === false) {\n      // nothing to read for now, return\n      return\n    }\n    self.push(buffer)\n  })\n}\n\nvar consumeResults = function (pq, cb) {\n  var cleanup = function () {\n    pq.removeListener('readable', onReadable)\n    pq.stopReader()\n  }\n\n  var readError = function (message) {\n    cleanup()\n    return cb(new Error(message || pq.errorMessage()))\n  }\n\n  var onReadable = function () {\n    // read waiting data from the socket\n    // e.g. clear the pending 'select'\n    if (!pq.consumeInput()) {\n      return readError()\n    }\n\n    // check if there is still outstanding data\n    // if so, wait for it all to come in\n    if (pq.isBusy()) {\n      return\n    }\n\n    // load our result object\n    pq.getResult()\n\n    // \"read until results return null\"\n    // or in our case ensure we only have one result\n    if (pq.getResult() && pq.resultStatus() !== 'PGRES_COPY_OUT') {\n      return readError('Only one result at a time is accepted')\n    }\n\n    if (pq.resultStatus() === 'PGRES_FATAL_ERROR') {\n      return readError()\n    }\n\n    cleanup()\n    return cb(null)\n  }\n  pq.on('readable', onReadable)\n  pq.startReader()\n}\n", "var Libpq = require('libpq')\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar assert = require('assert')\nvar types = require('pg-types')\nvar buildResult = require('./lib/build-result')\nvar CopyStream = require('./lib/copy-stream')\n\nvar Client = module.exports = function (config) {\n  if (!(this instanceof Client)) {\n    return new Client(config)\n  }\n\n  config = config || {}\n\n  EventEmitter.call(this)\n  this.pq = new Libpq()\n  this._reading = false\n  this._read = this._read.bind(this)\n\n  // allow custom type converstion to be passed in\n  this._types = config.types || types\n\n  // allow config to specify returning results\n  // as an array of values instead of a hash\n  this.arrayMode = config.arrayMode || false\n  this._resultCount = 0\n  this._rows = undefined\n  this._results = undefined\n\n  // lazy start the reader if notifications are listened for\n  // this way if you only run sync queries you wont block\n  // the event loop artificially\n  this.on('newListener', (event) => {\n    if (event !== 'notification') return\n    this._startReading()\n  })\n\n  this.on('result', this._onResult.bind(this))\n  this.on('readyForQuery', this._onReadyForQuery.bind(this))\n}\n\nutil.inherits(Client, EventEmitter)\n\nClient.prototype.connect = function (params, cb) {\n  this.pq.connect(params, cb)\n}\n\nClient.prototype.connectSync = function (params) {\n  this.pq.connectSync(params)\n}\n\nClient.prototype.query = function (text, values, cb) {\n  var queryFn\n\n  if (typeof values === 'function') {\n    cb = values\n    queryFn = function () { return self.pq.sendQuery(text) }\n  } else {\n    queryFn = function () { return self.pq.sendQueryParams(text, values) }\n  }\n\n  var self = this\n\n  self._dispatchQuery(self.pq, queryFn, function (err) {\n    if (err) return cb(err)\n\n    self._awaitResult(cb)\n  })\n}\n\nClient.prototype.prepare = function (statementName, text, nParams, cb) {\n  var self = this\n  var fn = function () {\n    return self.pq.sendPrepare(statementName, text, nParams)\n  }\n\n  self._dispatchQuery(self.pq, fn, function (err) {\n    if (err) return cb(err)\n    self._awaitResult(cb)\n  })\n}\n\nClient.prototype.execute = function (statementName, parameters, cb) {\n  var self = this\n\n  var fn = function () {\n    return self.pq.sendQueryPrepared(statementName, parameters)\n  }\n\n  self._dispatchQuery(self.pq, fn, function (err, rows) {\n    if (err) return cb(err)\n    self._awaitResult(cb)\n  })\n}\n\nClient.prototype.getCopyStream = function () {\n  this.pq.setNonBlocking(true)\n  this._stopReading()\n  return new CopyStream(this.pq)\n}\n\n// cancel a currently executing query\nClient.prototype.cancel = function (cb) {\n  assert(cb, 'Callback is required')\n  // result is either true or a string containing an error\n  var result = this.pq.cancel()\n  return setImmediate(function () {\n    cb(result === true ? undefined : new Error(result))\n  })\n}\n\nClient.prototype.querySync = function (text, values) {\n  if (values) {\n    this.pq.execParams(text, values)\n  } else {\n    this.pq.exec(text)\n  }\n\n  throwIfError(this.pq)\n  const result = buildResult(this.pq, this._types, this.arrayMode)\n  return result.rows\n}\n\nClient.prototype.prepareSync = function (statementName, text, nParams) {\n  this.pq.prepare(statementName, text, nParams)\n  throwIfError(this.pq)\n}\n\nClient.prototype.executeSync = function (statementName, parameters) {\n  this.pq.execPrepared(statementName, parameters)\n  throwIfError(this.pq)\n  return buildResult(this.pq, this._types, this.arrayMode).rows\n}\n\nClient.prototype.escapeLiteral = function (value) {\n  return this.pq.escapeLiteral(value)\n}\n\nClient.prototype.escapeIdentifier = function (value) {\n  return this.pq.escapeIdentifier(value)\n}\n\n// export the version number so we can check it in node-postgres\nmodule.exports.version = require('./package.json').version\n\nClient.prototype.end = function (cb) {\n  this._stopReading()\n  this.pq.finish()\n  if (cb) setImmediate(cb)\n}\n\nClient.prototype._readError = function (message) {\n  var err = new Error(message || this.pq.errorMessage())\n  this.emit('error', err)\n}\n\nClient.prototype._stopReading = function () {\n  if (!this._reading) return\n  this._reading = false\n  this.pq.stopReader()\n  this.pq.removeListener('readable', this._read)\n}\n\nClient.prototype._consumeQueryResults = function (pq) {\n  return buildResult(pq, this._types, this.arrayMode)\n}\n\nClient.prototype._emitResult = function (pq) {\n  var status = pq.resultStatus()\n  switch (status) {\n    case 'PGRES_FATAL_ERROR':\n      this._queryError = new Error(this.pq.resultErrorMessage())\n      break\n\n    case 'PGRES_TUPLES_OK':\n    case 'PGRES_COMMAND_OK':\n    case 'PGRES_EMPTY_QUERY':\n      const result = this._consumeQueryResults(this.pq)\n      this.emit('result', result)\n      break\n\n    case 'PGRES_COPY_OUT':\n    case 'PGRES_COPY_BOTH': {\n      break\n    }\n\n    default:\n      this._readError('unrecognized command status: ' + status)\n      break\n  }\n  return status\n}\n\n// called when libpq is readable\nClient.prototype._read = function () {\n  var pq = this.pq\n  // read waiting data from the socket\n  // e.g. clear the pending 'select'\n  if (!pq.consumeInput()) {\n    // if consumeInput returns false\n    // than a read error has been encountered\n    return this._readError()\n  }\n\n  // check if there is still outstanding data\n  // if so, wait for it all to come in\n  if (pq.isBusy()) {\n    return\n  }\n\n  // load our result object\n\n  while (pq.getResult()) {\n    const resultStatus = this._emitResult(this.pq)\n\n    // if the command initiated copy mode we need to break out of the read loop\n    // so a substream can begin to read copy data\n    if (resultStatus === 'PGRES_COPY_BOTH' || resultStatus === 'PGRES_COPY_OUT') {\n      break\n    }\n\n    // if reading multiple results, sometimes the following results might cause\n    // a blocking read. in this scenario yield back off the reader until libpq is readable\n    if (pq.isBusy()) {\n      return\n    }\n  }\n\n  this.emit('readyForQuery')\n\n  var notice = this.pq.notifies()\n  while (notice) {\n    this.emit('notification', notice)\n    notice = this.pq.notifies()\n  }\n}\n\n// ensures the client is reading and\n// everything is set up for async io\nClient.prototype._startReading = function () {\n  if (this._reading) return\n  this._reading = true\n  this.pq.on('readable', this._read)\n  this.pq.startReader()\n}\n\nvar throwIfError = function (pq) {\n  var err = pq.resultErrorMessage() || pq.errorMessage()\n  if (err) {\n    throw new Error(err)\n  }\n}\n\nClient.prototype._awaitResult = function (cb) {\n  this._queryCallback = cb\n  return this._startReading()\n}\n\n// wait for the writable socket to drain\nClient.prototype._waitForDrain = function (pq, cb) {\n  var res = pq.flush()\n  // res of 0 is success\n  if (res === 0) return cb()\n\n  // res of -1 is failure\n  if (res === -1) return cb(pq.errorMessage())\n\n  // otherwise outgoing message didn't flush to socket\n  // wait for it to flush and try again\n  var self = this\n  // you cannot read & write on a socket at the same time\n  return pq.writable(function () {\n    self._waitForDrain(pq, cb)\n  })\n}\n\n// send an async query to libpq and wait for it to\n// finish writing query text to the socket\nClient.prototype._dispatchQuery = function (pq, fn, cb) {\n  this._stopReading()\n  var success = pq.setNonBlocking(true)\n  if (!success) return cb(new Error('Unable to set non-blocking to true'))\n  var sent = fn()\n  if (!sent) return cb(new Error(pq.errorMessage() || 'Something went wrong dispatching the query'))\n  this._waitForDrain(pq, cb)\n}\n\nClient.prototype._onResult = function (result) {\n  if (this._resultCount === 0) {\n    this._results = result\n    this._rows = result.rows\n  } else if (this._resultCount === 1) {\n    this._results = [this._results, result]\n    this._rows = [this._rows, result.rows]\n  } else {\n    this._results.push(result)\n    this._rows.push(result.rows)\n  }\n  this._resultCount++\n}\n\nClient.prototype._onReadyForQuery = function () {\n  // remove instance callback\n  const cb = this._queryCallback\n  this._queryCallback = undefined\n\n  // remove instance query error\n  const err = this._queryError\n  this._queryError = undefined\n\n  // remove instance rows\n  const rows = this._rows\n  this._rows = undefined\n\n  // remove instance results\n  const results = this._results\n  this._results = undefined\n\n  this._resultCount = 0\n\n  if (cb) {\n    cb(err, rows || [], results)\n  }\n}\n", "'use strict'\n\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar utils = require('../utils')\n\nvar NativeQuery = (module.exports = function (config, values, callback) {\n  EventEmitter.call(this)\n  config = utils.normalizeQueryConfig(config, values, callback)\n  this.text = config.text\n  this.values = config.values\n  this.name = config.name\n  this.callback = config.callback\n  this.state = 'new'\n  this._arrayMode = config.rowMode === 'array'\n\n  // if the 'row' event is listened for\n  // then emit them as they come in\n  // without setting singleRowMode to true\n  // this has almost no meaning because libpq\n  // reads all rows into memory befor returning any\n  this._emitRowEvents = false\n  this.on(\n    'newListener',\n    function (event) {\n      if (event === 'row') this._emitRowEvents = true\n    }.bind(this)\n  )\n})\n\nutil.inherits(NativeQuery, EventEmitter)\n\nvar errorFieldMap = {\n  /* eslint-disable quote-props */\n  sqlState: 'code',\n  statementPosition: 'position',\n  messagePrimary: 'message',\n  context: 'where',\n  schemaName: 'schema',\n  tableName: 'table',\n  columnName: 'column',\n  dataTypeName: 'dataType',\n  constraintName: 'constraint',\n  sourceFile: 'file',\n  sourceLine: 'line',\n  sourceFunction: 'routine',\n}\n\nNativeQuery.prototype.handleError = function (err) {\n  // copy pq error fields into the error object\n  var fields = this.native.pq.resultErrorFields()\n  if (fields) {\n    for (var key in fields) {\n      var normalizedFieldName = errorFieldMap[key] || key\n      err[normalizedFieldName] = fields[key]\n    }\n  }\n  if (this.callback) {\n    this.callback(err)\n  } else {\n    this.emit('error', err)\n  }\n  this.state = 'error'\n}\n\nNativeQuery.prototype.then = function (onSuccess, onFailure) {\n  return this._getPromise().then(onSuccess, onFailure)\n}\n\nNativeQuery.prototype.catch = function (callback) {\n  return this._getPromise().catch(callback)\n}\n\nNativeQuery.prototype._getPromise = function () {\n  if (this._promise) return this._promise\n  this._promise = new Promise(\n    function (resolve, reject) {\n      this._once('end', resolve)\n      this._once('error', reject)\n    }.bind(this)\n  )\n  return this._promise\n}\n\nNativeQuery.prototype.submit = function (client) {\n  this.state = 'running'\n  var self = this\n  this.native = client.native\n  client.native.arrayMode = this._arrayMode\n\n  var after = function (err, rows, results) {\n    client.native.arrayMode = false\n    setImmediate(function () {\n      self.emit('_done')\n    })\n\n    // handle possible query error\n    if (err) {\n      return self.handleError(err)\n    }\n\n    // emit row events for each row in the result\n    if (self._emitRowEvents) {\n      if (results.length > 1) {\n        rows.forEach((rowOfRows, i) => {\n          rowOfRows.forEach((row) => {\n            self.emit('row', row, results[i])\n          })\n        })\n      } else {\n        rows.forEach(function (row) {\n          self.emit('row', row, results)\n        })\n      }\n    }\n\n    // handle successful result\n    self.state = 'end'\n    self.emit('end', results)\n    if (self.callback) {\n      self.callback(null, results)\n    }\n  }\n\n  if (process.domain) {\n    after = process.domain.bind(after)\n  }\n\n  // named query\n  if (this.name) {\n    if (this.name.length > 63) {\n      /* eslint-disable no-console */\n      console.error('Warning! Postgres only supports 63 characters for query names.')\n      console.error('You supplied %s (%s)', this.name, this.name.length)\n      console.error('This can cause conflicts and silent errors executing queries')\n      /* eslint-enable no-console */\n    }\n    var values = (this.values || []).map(utils.prepareValue)\n\n    // check if the client has already executed this named query\n    // if so...just execute it again - skip the planning phase\n    if (client.namedQueries[this.name]) {\n      if (this.text && client.namedQueries[this.name] !== this.text) {\n        const err = new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\n        return after(err)\n      }\n      return client.native.execute(this.name, values, after)\n    }\n    // plan the named query the first time, then execute it\n    return client.native.prepare(this.name, this.text, values.length, function (err) {\n      if (err) return after(err)\n      client.namedQueries[self.name] = self.text\n      return self.native.execute(self.name, values, after)\n    })\n  } else if (this.values) {\n    if (!Array.isArray(this.values)) {\n      const err = new Error('Query values must be an array')\n      return after(err)\n    }\n    var vals = this.values.map(utils.prepareValue)\n    client.native.query(this.text, vals, after)\n  } else {\n    client.native.query(this.text, after)\n  }\n}\n", "'use strict'\n\n// eslint-disable-next-line\nvar Native = require('pg-native')\nvar TypeOverrides = require('../type-overrides')\nvar pkg = require('../../package.json')\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar ConnectionParameters = require('../connection-parameters')\n\nvar NativeQuery = require('./query')\n\nvar Client = (module.exports = function (config) {\n  EventEmitter.call(this)\n  config = config || {}\n\n  this._Promise = config.Promise || global.Promise\n  this._types = new TypeOverrides(config.types)\n\n  this.native = new Native({\n    types: this._types,\n  })\n\n  this._queryQueue = []\n  this._ending = false\n  this._connecting = false\n  this._connected = false\n  this._queryable = true\n\n  // keep these on the object for legacy reasons\n  // for the time being. TODO: deprecate all this jazz\n  var cp = (this.connectionParameters = new ConnectionParameters(config))\n  this.user = cp.user\n\n  // \"hiding\" the password so it doesn't show up in stack traces\n  // or if the client is console.logged\n  Object.defineProperty(this, 'password', {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: cp.password,\n  })\n  this.database = cp.database\n  this.host = cp.host\n  this.port = cp.port\n\n  // a hash to hold named queries\n  this.namedQueries = {}\n})\n\nClient.Query = NativeQuery\n\nutil.inherits(Client, EventEmitter)\n\nClient.prototype._errorAllQueries = function (err) {\n  const enqueueError = (query) => {\n    process.nextTick(() => {\n      query.native = this.native\n      query.handleError(err)\n    })\n  }\n\n  if (this._hasActiveQuery()) {\n    enqueueError(this._activeQuery)\n    this._activeQuery = null\n  }\n\n  this._queryQueue.forEach(enqueueError)\n  this._queryQueue.length = 0\n}\n\n// connect to the backend\n// pass an optional callback to be called once connected\n// or with an error if there was a connection error\nClient.prototype._connect = function (cb) {\n  var self = this\n\n  if (this._connecting) {\n    process.nextTick(() => cb(new Error('Client has already been connected. You cannot reuse a client.')))\n    return\n  }\n\n  this._connecting = true\n\n  this.connectionParameters.getLibpqConnectionString(function (err, conString) {\n    if (err) return cb(err)\n    self.native.connect(conString, function (err) {\n      if (err) {\n        self.native.end()\n        return cb(err)\n      }\n\n      // set internal states to connected\n      self._connected = true\n\n      // handle connection errors from the native layer\n      self.native.on('error', function (err) {\n        self._queryable = false\n        self._errorAllQueries(err)\n        self.emit('error', err)\n      })\n\n      self.native.on('notification', function (msg) {\n        self.emit('notification', {\n          channel: msg.relname,\n          payload: msg.extra,\n        })\n      })\n\n      // signal we are connected now\n      self.emit('connect')\n      self._pulseQueryQueue(true)\n\n      cb()\n    })\n  })\n}\n\nClient.prototype.connect = function (callback) {\n  if (callback) {\n    this._connect(callback)\n    return\n  }\n\n  return new this._Promise((resolve, reject) => {\n    this._connect((error) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\n// send a query to the server\n// this method is highly overloaded to take\n// 1) string query, optional array of parameters, optional function callback\n// 2) object query with {\n//    string query\n//    optional array values,\n//    optional function callback instead of as a separate parameter\n//    optional string name to name & cache the query plan\n//    optional string rowMode = 'array' for an array of results\n//  }\nClient.prototype.query = function (config, values, callback) {\n  var query\n  var result\n  var readTimeout\n  var readTimeoutTimer\n  var queryCallback\n\n  if (config === null || config === undefined) {\n    throw new TypeError('Client was passed a null or undefined query')\n  } else if (typeof config.submit === 'function') {\n    readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n    result = query = config\n    // accept query(new Query(...), (err, res) => { }) style\n    if (typeof values === 'function') {\n      config.callback = values\n    }\n  } else {\n    readTimeout = this.connectionParameters.query_timeout\n    query = new NativeQuery(config, values, callback)\n    if (!query.callback) {\n      let resolveOut, rejectOut\n      result = new this._Promise((resolve, reject) => {\n        resolveOut = resolve\n        rejectOut = reject\n      })\n      query.callback = (err, res) => (err ? rejectOut(err) : resolveOut(res))\n    }\n  }\n\n  if (readTimeout) {\n    queryCallback = query.callback\n\n    readTimeoutTimer = setTimeout(() => {\n      var error = new Error('Query read timeout')\n\n      process.nextTick(() => {\n        query.handleError(error, this.connection)\n      })\n\n      queryCallback(error)\n\n      // we already returned an error,\n      // just do nothing if query completes\n      query.callback = () => {}\n\n      // Remove from queue\n      var index = this._queryQueue.indexOf(query)\n      if (index > -1) {\n        this._queryQueue.splice(index, 1)\n      }\n\n      this._pulseQueryQueue()\n    }, readTimeout)\n\n    query.callback = (err, res) => {\n      clearTimeout(readTimeoutTimer)\n      queryCallback(err, res)\n    }\n  }\n\n  if (!this._queryable) {\n    query.native = this.native\n    process.nextTick(() => {\n      query.handleError(new Error('Client has encountered a connection error and is not queryable'))\n    })\n    return result\n  }\n\n  if (this._ending) {\n    query.native = this.native\n    process.nextTick(() => {\n      query.handleError(new Error('Client was closed and is not queryable'))\n    })\n    return result\n  }\n\n  this._queryQueue.push(query)\n  this._pulseQueryQueue()\n  return result\n}\n\n// disconnect from the backend server\nClient.prototype.end = function (cb) {\n  var self = this\n\n  this._ending = true\n\n  if (!this._connected) {\n    this.once('connect', this.end.bind(this, cb))\n  }\n  var result\n  if (!cb) {\n    result = new this._Promise(function (resolve, reject) {\n      cb = (err) => (err ? reject(err) : resolve())\n    })\n  }\n  this.native.end(function () {\n    self._errorAllQueries(new Error('Connection terminated'))\n\n    process.nextTick(() => {\n      self.emit('end')\n      if (cb) cb()\n    })\n  })\n  return result\n}\n\nClient.prototype._hasActiveQuery = function () {\n  return this._activeQuery && this._activeQuery.state !== 'error' && this._activeQuery.state !== 'end'\n}\n\nClient.prototype._pulseQueryQueue = function (initialConnection) {\n  if (!this._connected) {\n    return\n  }\n  if (this._hasActiveQuery()) {\n    return\n  }\n  var query = this._queryQueue.shift()\n  if (!query) {\n    if (!initialConnection) {\n      this.emit('drain')\n    }\n    return\n  }\n  this._activeQuery = query\n  query.submit(this)\n  var self = this\n  query.once('_done', function () {\n    self._pulseQueryQueue()\n  })\n}\n\n// attempt to cancel an in-progress query\nClient.prototype.cancel = function (query) {\n  if (this._activeQuery === query) {\n    this.native.cancel(function () {})\n  } else if (this._queryQueue.indexOf(query) !== -1) {\n    this._queryQueue.splice(this._queryQueue.indexOf(query), 1)\n  }\n}\n\nClient.prototype.ref = function () {}\nClient.prototype.unref = function () {}\n\nClient.prototype.setTypeParser = function (oid, format, parseFn) {\n  return this._types.setTypeParser(oid, format, parseFn)\n}\n\nClient.prototype.getTypeParser = function (oid, format) {\n  return this._types.getTypeParser(oid, format)\n}\n", "'use strict'\nmodule.exports = require('./client')\n", "'use strict'\n\nvar Client = require('./client')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\nvar Pool = require('pg-pool')\nconst { DatabaseError } = require('pg-protocol')\n\nconst poolFactory = (Client) => {\n  return class BoundPool extends Pool {\n    constructor(options) {\n      super(options, Client)\n    }\n  }\n}\n\nvar PG = function (clientConstructor) {\n  this.defaults = defaults\n  this.Client = clientConstructor\n  this.Query = this.Client.Query\n  this.Pool = poolFactory(this.Client)\n  this._pools = []\n  this.Connection = Connection\n  this.types = require('pg-types')\n  this.DatabaseError = DatabaseError\n}\n\nif (typeof process.env.NODE_PG_FORCE_NATIVE !== 'undefined') {\n  module.exports = new PG(require('./native'))\n} else {\n  module.exports = new PG(Client)\n\n  // lazy require native module...the native module may not have installed\n  Object.defineProperty(module.exports, 'native', {\n    configurable: true,\n    enumerable: false,\n    get() {\n      var native = null\n      try {\n        native = new PG(require('./native'))\n      } catch (err) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw err\n        }\n      }\n\n      // overwrite module.exports.native so that getter is never called again\n      Object.defineProperty(module.exports, 'native', {\n        value: native,\n      })\n\n      return native\n    },\n  })\n}\n", "import http from 'http';\nimport { ConfigSpec } from '../config';\nimport { createHTTPHandler } from '../lib/http';\nimport { WithClient } from '../lib/xray_db';\nimport { registerAPIEndpoints } from \"./api\";\n\nexport type HTTPConfig = {\n\t\"httpPort\": number,\n\t\"httpHost\": string\n}\nexport const httpSpec: ConfigSpec<HTTPConfig> = {\n\t\"httpPort\": {\n\t\tparseFn: parseInt,\n\t\tenv: \"XRAY_HTTP_PORT\",\n\t\tdefaultValue: 3001,\n\t},\n\t\"httpHost\": {\n\t\tenv: \"XRAY_HTTP_HOST\",\n\t\tdefaultValue: \"localhost\"\n\t}\n};\n\nexport function startServer(\n\twithClient: WithClient,\n\thttpHost: string,\n\thttpPort: number\n) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst { onRequest, GET } = createHTTPHandler();\n\t\tconst server = http.createServer(onRequest);\n\n\t\tregisterAPIEndpoints(withClient, GET);\n\t\t\n\t\tserver.listen(httpPort, httpHost, () => {\n\t\t\tresolve(true);\n\t\t});\n\t})\n}\n\n", "import http from 'http';\n\n// very smol http router\n\n// types\ninterface ParsedIncomingMessage extends http.IncomingMessage {\n\tsearchParams: URLSearchParams\n}\n\ntype HTTPMethod = \"GET\" | \"POST\";\n\ntype RTreeNode = (\n\t{\n\t\t[index in HTTPMethod]?: http.RequestListener\n\t}\n\t& {\n\t\tnodes: { [index: string]: RTreeNode },\n\t}\n);\n\ntype APIRequestHandler = (\n\t(req: ParsedIncomingMessage) => object | Promise<object>);\n\ntype ResolveNodeOptions = {\n\ttrailblaze?: boolean,\n}\n\ntype APIError = {\n\tmessage: string,\n\tname: string,\n}\n\ntype APIResponse = {\n\tversion: number,\n\tdata?: {},\n\terror?: APIError,\n}\n\nexport type GET = (path: string, fn: APIRequestHandler) => boolean;\n\n//// \nfunction createRTreeNode(): RTreeNode {\n\treturn {\n\t\tnodes: {}\n\t}\n}\n\nfunction traverse(tree: RTreeNode, pathArr: string[], options: ResolveNodeOptions = {}){\n\tif(pathArr.length === 0){\n\t\treturn tree;\n\t}\n\n\tif(tree.nodes[pathArr[0]] === undefined){\n\t\tif(options.trailblaze === false){\n\t\t\treturn undefined;\n\t\t}\n\t\t\n\t\ttree.nodes[pathArr[0]] = createRTreeNode();\n\t}\n\n\treturn traverse(tree.nodes[pathArr[0]], pathArr.slice(1), options);\n}\n\nfunction getRequestHandler(\n\ttree: RTreeNode, method: string, pathArr: string[]\n): APIRequestHandler{\n\tconst node = traverse(tree, pathArr);\n\tif(node === undefined){\n\t\treturn undefined;\n\t}\n\n\treturn node[method];\n}\n\nfunction addRequestHandler(\n\ttree: RTreeNode, method: HTTPMethod, path: string, fn: http.RequestListener\n) {\n\tconst pathArr = path.split('/');\n\tconst node = traverse(tree, pathArr, { trailblaze: true });\n\tnode[method] = fn;\n\n\treturn true;\n}\n\nfunction createAPIResponse(): APIResponse{\n\treturn {\n\t\tversion: 1\n\t}\n}\n\nexport class HTTPError extends Error{\n\tcode = 500;\n\t\n\tconstructor(code: number, message: string){\n\t\tsuper(message);\n\n\t\tError.captureStackTrace(this, HTTPError)\n\n\t\tthis.code = code;\n\t}\n}\n\nexport function createHTTPHandler() {\n\tconst rootRTree = createRTreeNode();\n\t\n\tasync function onRequest(\n\t\treq: http.IncomingMessage,\n\t\tres: http.ServerResponse\n\t) {\n\t\tconst method = req.method;\n\t\tconst parsedURL = new URL(\n\t\t\treq.url,\n\t\t\t`http://${req.headers.host}`\n\t\t);\n\n\t\tconst { pathname, searchParams } = parsedURL;\n\t\tconst pathArr = pathname.split('/');\n\n\t\tconst requestHandler = getRequestHandler(\n\t\t\trootRTree,\n\t\t\tmethod,\n\t\t\tpathArr\n\t\t);\n\n\t\tif (requestHandler === undefined) {\n\t\t\tres.writeHead(404);\n\t\t\tres.end();\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst parsedReq = Object.assign(\n\t\t\t\t{},\n\t\t\t\treq,\n\t\t\t\t{ searchParams }\n\t\t\t);\n\t\t\t\n\t\t\tconst data = await requestHandler(parsedReq);\n\t\t\tconst response = Object.assign(\n\t\t\t\tcreateAPIResponse(),\n\t\t\t\t{ data }\n\t\t\t);\n\t\t\t\n\t\t\tres.writeHead(200);\n\t\t\tres.end(JSON.stringify(response));\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\n\t\t\tif(!(err instanceof HTTPError)){\n\t\t\t\terr = new HTTPError(500, \"Something went bad\");\n\t\t\t}\n\n\t\t\tconst response = Object.assign(\n\t\t\t\tcreateAPIResponse(),\n\t\t\t\t{\n\t\t\t\t\terror: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tcode: err.code,\n\t\t\t\t\t\tname: err.name\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tres.writeHead(err.code);\n\t\t\tres.end(JSON.stringify(response));\n\t\t}\n\t\tconsole.log(`${method} ${pathname} ${res.statusCode}`);\n\t}\n\n\tfunction GET(path: string, fn: APIRequestHandler) {\n\t\treturn addRequestHandler(rootRTree, \"GET\", path, fn);\n\t}\n\n\tfunction POST(path: string, fn: APIRequestHandler) {\n\t\treturn addRequestHandler(rootRTree, \"POST\", path, fn);\n\t}\n\n\treturn { onRequest, GET, POST };\n}\n", "import { PoolClient } from 'pg';\n\nconst apkByNameQuery = (`\nSELECT * \nFROM app_versions\nWHERE app=$1\n`)\nexport function getByAPKName(name: string){\n\treturn async (client: PoolClient) => {\n\t\tconst rows = await client.query(apkByNameQuery, [name]);\n\t\treturn rows[0];\n\t}\n}\n", "import { getByAPKName } from '../lib/android';\nimport { WithClient } from '../lib/xray_db';\nimport { GET, HTTPError } from '../lib/http';\n\nconst API_VERSION = 1;\n\n\nexport function registerAPIEndpoints(\n\twithClient: WithClient,\n\tGET: GET\n) {\n\tGET(\"/\", () => {\n\t\t// send api metadata\n\t\treturn {\n\t\t\tversion: API_VERSION\n\t\t};\n\t});\n\n\tGET(\"/android\", async (req) => {\n\t\tconst apkName = req.searchParams.get(\"apk\");\n\t\tconst analysis = await withClient(getByAPKName(apkName));\n\t\tif(analysis === undefined){\n\t\t\tthrow new HTTPError(404, \"Apk not found.\");\n\t\t}\n\t\t\n\t\treturn analysis;\n\t});\n}\n", "import { Pool, PoolClient } from 'pg';\nimport { ConfigSpec } from '../config';\n\nexport type DBConfig = {\n\t\"dbUser\": string,\n\t\"dbPass\": string,\n\t\"dbHost\": string,\n\t\"dbPort\": number,\n\t\"dbDatabase\": string,\n}\nexport const dbSpec: ConfigSpec<DBConfig> = {\n\t\"dbUser\": {\n\t\tenv: \"XRAY_PGUSER\"\n\t},\n\t\"dbPass\": {\n\t\tenv: \"XRAY_PGPASSWORD\"\n\t},\n\t\"dbHost\": {\n\t\tenv: \"XRAY_PGHOST\",\n\t\tdefaultValue: \"localhost\"\n\t},\n\t\"dbPort\": {\n\t\tenv: \"XRAY_PGPORT\",\n\t\tparseFn: parseInt,\n\t\tdefaultValue: 5432,\n\t},\n\t\"dbDatabase\": {\n\t\tenv: \"XRAY_PGDATABASE\",\n\t\tdefaultValue: \"xray2020\"\n\t}\n}\nexport type WithClientQueryFunction = (client: PoolClient) => Promise<any>;\nexport type WithClient = (fn: WithClientQueryFunction) => Promise<any>\nexport function connectDatabase(config: DBConfig): WithClient {\n\tconst pool = new Pool({\n\t\thost: config.dbHost,\n\t\tport: config.dbPort,\n\t\tdatabase: config.dbDatabase,\n\t\tuser: config.dbUser,\n\t\tpassword: config.dbPass,\n\t});\n\n\tpool.on(\"error\", (err, _client) => {\n\t\tconsole.error(\"Postgres connection pool error\", err);\n\t});\n\n\t// on connect just return a function we will use to\n\t// run queries with\n\treturn async function(fn: WithClientQueryFunction) {\n\t\tconst client = await pool.connect();\n\t\tconst queryRes = await fn(client);\n\t\tclient.release();\n\n\t\treturn queryRes;\n\t};\n\n}\n", "type ConfigParamSpec = {\n\tparseFn?: Function,\n\tenv?: string,\n\tdefaultValue?: unknown,\n}\n\nexport type ConfigSpec <T> = {\n\t[index in keyof T]: ConfigParamSpec\n}\n\ntype ReadConfigParamResult<T>= {\n\tname: keyof T,\n\tvalue: T[keyof T],\n}\n\ntype ReadConfigResult<T> = {\n\t[index in keyof T]: T[index]\n}\n\nfunction isNullish(x: any): boolean{\n\tif(x === undefined){\n\t\treturn true;\n\t}\n\n\tif(x === null){\n\t\treturn true;\n\t}\n\n\tif(Number.isNaN(x)){\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction parseParamValue(spec: ConfigParamSpec){\n\tconst defaultVal = spec.defaultValue;\n\tconst envVal = process.env[spec.env];\n\n\tif (!isNullish(envVal)) {\n\t\tif(spec.parseFn !== undefined){\n\t\t\treturn spec.parseFn.call(undefined, envVal);\n\t\t}\t\n\t\treturn envVal;\n\t}\n\treturn defaultVal;\n}\n\nfunction readConfigParam<T>(\n\tname: keyof T,\n\tspec: ConfigParamSpec\n): ReadConfigParamResult<T> {\n\tconst value = parseParamValue(spec);\n\treturn { name, value };\n}\n\nfunction entries<T>(obj: T): [keyof T, any][]{\n\treturn Object.entries(obj) as [keyof T, any];\n}\n\nexport function readConfig<T>(spec: ConfigSpec<T>): ReadConfigResult<T>{\n\treturn entries(spec)\n\t.map(([name, spec]) => readConfigParam<T>(name, spec))\n\t.reduce((acc, curr) => {\n\t\tacc[curr.name] = curr.value;\n\t\treturn acc;\n\t}, {} as ReadConfigResult<T>);\n}\n", "import {\n\tHTTPConfig,\n\thttpSpec,\n\tstartServer\n} from './http';\nimport {\n\tDBConfig,\n\tdbSpec,\n\tconnectDatabase\n} from './lib/xray_db';\nimport {\n\treadConfig,\n\tConfigSpec\n} from './config';\n\n\ntype ServerConfig = DBConfig & HTTPConfig;\nconst serverConfig: ConfigSpec<ServerConfig> = {\n\t...httpSpec,\n\t...dbSpec,\n};\n\nconst {\n\thttpPort,\n\thttpHost,\n\tdbUser,\n\tdbPass,\n\tdbHost,\n\tdbPort,\n\tdbDatabase,\n} = readConfig<ServerConfig>(serverConfig);\n\n(async function(){\n\tconst withClient = connectDatabase({\n\t\tdbUser,\n\t\tdbPass,\n\t\tdbHost,\n\t\tdbPort,\n\t\tdbDatabase\n\t});\n\t\n\tawait startServer(withClient, httpHost, httpPort);\n\tconsole.log(`HTTP server at ${httpHost}:${httpPort}`);\n})();\n\n\n"],
  "mappings": "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",
  "names": []
}
